{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/register/register.component.ts","webpack:///src/app/auth/register/register.component.html","webpack:///src/app/auth/shared/auth.service.ts","webpack:///src/app/car/car.component.ts","webpack:///src/app/car/car.component.html","webpack:///src/app/car/new-car/new-car.component.ts","webpack:///src/app/car/new-car/new-car.component.html","webpack:///src/app/car/occupation/occupation.component.ts","webpack:///src/app/car/occupation/occupation.component.html","webpack:///src/app/car/shared/car.service.ts","webpack:///src/app/car/shared/occupation.service.ts","webpack:///src/app/car/statistics/statistics.component.ts","webpack:///src/app/car/statistics/statistics.component.html","webpack:///src/app/chat/chat.component.ts","webpack:///src/app/chat/chat.component.html","webpack:///src/app/chat/shared/chat.service.ts","webpack:///src/app/comment/comment.component.ts","webpack:///src/app/comment/comment.component.html","webpack:///src/app/comment/shared/comment.service.ts","webpack:///src/app/comment/shared/grade.service.ts","webpack:///src/app/http-interceptors/auth-interceptor.ts","webpack:///src/app/requests/past-requests/past-requests.component.ts","webpack:///src/app/requests/past-requests/past-requests.component.html","webpack:///src/app/requests/requests.component.ts","webpack:///src/app/requests/requests.component.html","webpack:///src/app/requests/shared/request.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","role","localStorage","getItem","setItem","change","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","LoginComponent","formBuilder","loginForm","group","username","password","userData","reset","onSubmit","RegisterComponent","registerForm","firstName","lastName","address","email","AuthService","token","providedIn","CarComponent","carService","commentService","route","sub","params","subscribe","getOneAd","data","ad","getCommentsForCar","car","comments","comment","adId","approved","text","commentText","userUsername","carId","createComment","sendComment","NewCarComponent","imageFiles","imageURLs","newCarForm","markId","modelId","fuelId","gearboxId","carClassId","kilometrage","numberOfChildSeats","pickUpPlace","fromDate","toDate","allowedKilometrage","priceListId","cdw","isAllowed","getData","value","images","postNewAd","alert","getModels","models","getMarks","marks","getGearboxes","gearboxes","getFuels","fuels","getCarClasses","carClasses","forEach","element","selectedMark","event","target","files","filesAmount","length","i","reader","FileReader","push","onload","console","log","result","readAsDataURL","markChange","fileUpload","OccupationComponent","occupationService","newOccupationForm","dateFrom","dateTo","occupation","setOccupied","getCarsByUser","cars","CarService","http","get","api","userId","adDTO","carDTO","cdwAvailable","post","OccupationService","occupied","StatisticsComponent","getStatistics","statistics","err","error","carWithHighestGrade","markName","ChatComponent","chatService","chats","messageForm","getMessages","chat","companionId","companion","messages","mess","newMessage","sent","Date","user","sendMessage","ChatService","message","CommentComponent","getComments","acceptOrRefuse","refresh","CommentService","decision","GradeService","grade","AuthInterceptor","auth","next","authToken","getToken","authReq","clone","headers","set","handle","request","PastRequestsComponent","requestService","modalService","gradeService","router","currentRate","getPast","content","myModal","open","myModalReport","textComment","undefined","createGrade","close","textCommentReport","newReport","ad_id","createReport","report","requests","navigate","RequestsComponent","getRequests","getActive","bundleId","acceptRequest","acceptBundle","refuseRequest","refuseBundle","cancelRequest","cancelBundle","RequestService","reqId","patch","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAgBA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KADqB,EAErB;AAAED,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE;AAA/B,KAFqB,EAGrB;AAAED,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KAHqB,EAIrB;AAAED,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE;AAA/B,KAJqB,EAKrB;AAAED,UAAI,EAAE,eAAR;AAAyBC,eAAS,EAAE;AAApC,KALqB,EAMrB;AAAED,UAAI,EAAE,SAAR;AAAmBC,eAAS,EAAE;AAA9B,KANqB,EAOrB;AAAED,UAAI,EAAE,SAAR;AAAmBC,eAAS,EAAE;AAA9B,KAPqB,EAQrB;AAAED,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE;AAA/B,KARqB,EASrB;AAAED,UAAI,EAAE,YAAR;AAAsBC,eAAS,EAAE;AAAjC,KATqB,EAUrB;AAAED,UAAI,EAAE,YAAR;AAAsBC,eAAS,EAAE;AAAjC,KAVqB,CAAvB;;QAiBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,EAA+B,oEAA/B,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA,gFAHa,oEAGb;AAHsB,kBACvC,4DADuC;AAGtB,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,EAA+B,oEAA/B,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACjC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;AC6BS;;AACG;;AAAmD;;AAAU;;AAChE;;;;AADuB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QDvBnBQ,Y;AALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,YAAR;AACA,aAAAC,IAAA,GAAeC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAf;AAaD;;;;mCAXS;AACND,sBAAY,CAACE,OAAb,CAAqB,WAArB,EAAkC,YAAlC;AACD;;;iCAEQ;AACP,cAAIF,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqC,WAAzC,EACED,YAAY,CAACE,OAAb,CAAqB,WAArB,EAAkC,YAAlC,EADF,KAGEF,YAAY,CAACE,OAAb,CAAqB,WAArB,EAAkC,WAAlC;AACF,eAAKH,IAAL,GAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAZ;AACD;;;;;;;uBAdUJ,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,c;AAAA,iY;AAAA;AAAA;ACPzB;;AACG;;AACG;;AACG;;AACG;;AAA8C;;AAAK;;AACtD;;AACA;;AACG;;AAAiD;;AAAQ;;AAC5D;;AACA;;AACG;;AAA6C;;AAAI;;AACpD;;AACA;;AACG;;AAAiD;;AAAe;;AACnE;;AACA;;AACG;;AACI;;AAAa;;AAEpB;;AACA;;AACG;;AAAgD;;AAAO;;AAC1D;;AACA;;AACG;;AAAiD;;AAAQ;;AAC5D;;AACA;;AACC;;AAAmD;;AAAU;;AAC/D;;AACC;;AAGH;;AAEA;;AAA8C;;AAAK;;AAEnD;;AACG;;AACA;;AAA2B;AAAA,mBAAS,IAAAM,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAQ;;AACxD;;AAA6C;;AAAI;;AACrD;;AACA;;AACH;;;;AAtCgC;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAKA;;AAAA;;AAGA;;AAAA;;AAGF;;AAAA;;AAEA;;AAAA;;;;;;;;;sEDtBjBN,Y,EAAY;cALxB,uDAKwB;eALd;AACTO,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAJT,CAAC,mEAAD,EAAa,gFAAb,EAA6B,sEAA7B,EAA0C,sEAA1C,EACT;AAAEC,eAAO,EAAE,sEAAX;AAA8BC,gBAAQ,EAAE,oFAAxC;AAAyDC,aAAK,EAAE;AAAhE,OADS,C;AAC+D,gBAFjE,CAAC,oEAAD,EAAY,uEAAZ,EAA2B,oEAA3B,EAA6C,qEAA7C,EAA+D,0DAA/D,EAA4E,kEAA5E,CAEiE;;;;0HAG/DH,S,EAAS;AAAA,uBAjBlB,2DAiBkB,EAhBlB,0EAgBkB,EAflB,mFAekB,EAdlB,kEAckB,EAblB,+EAakB,EAZlB,+EAYkB,EAXlB,gEAWkB,EAVlB,yFAUkB,EATlB,4EASkB,EARlB,sGAQkB,EAPlB,yFAOkB;AAPC,kBAEX,oEAFW,EAEA,uEAFA,EAEe,oEAFf,EAEiC,qEAFjC,EAEmD,0DAFnD,EAEgE,kEAFhE;AAOD,O;AALoF,K;;;;;sEAK7FA,S,EAAS;cAnBrB,sDAmBqB;eAnBZ;AACRI,sBAAY,EAAE,CACZ,2DADY,EAEZ,0EAFY,EAGZ,mFAHY,EAIZ,kEAJY,EAKZ,+EALY,EAMZ,+EANY,EAOZ,gEAPY,EAQZ,yFARY,EASZ,4EATY,EAUZ,sGAVY,EAWZ,yFAXY,CADN;AAcRf,iBAAO,EAAE,CAAC,oEAAD,EAAY,uEAAZ,EAA2B,oEAA3B,EAA6C,qEAA7C,EAA+D,0DAA/D,EAA4E,kEAA5E,CAdD;AAeRgB,mBAAS,EAAE,CAAC,mEAAD,EAAa,gFAAb,EAA6B,sEAA7B,EAA0C,sEAA1C,EACT;AAAEJ,mBAAO,EAAE,sEAAX;AAA8BC,oBAAQ,EAAE,oFAAxC;AAAyDC,iBAAK,EAAE;AAAhE,WADS,CAfH;AAiBRG,mBAAS,EAAE,CAAC,2DAAD;AAjBH,S;AAmBY,Q;;;;;;;;;;;;;;;;;;AC5CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,c;AAGX,8BAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAClB,aAAKC,SAAL,GAAiB,KAAKD,WAAL,CAAiBE,KAAjB,CAAuB;AACtCC,kBAAQ,EAAE,EAD4B;AAEtCC,kBAAQ,EAAE;AAF4B,SAAvB,CAAjB;AAID;;;;mCAEO,CAAW;;;iCAEVC,Q,EAAgB;AACvB;AACA,eAAKJ,SAAL,CAAeK,KAAf;AACD;;;;;;;uBAfUP,c,EAAc,2H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,wY;AAAA;AAAA;ACR3B;;AACE;;AAGE;AAAA,mBAAY,IAAAQ,QAAA,qBAAZ;AAAqC,WAArC;;AAEA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAMF;;AACA;;AACE;;AAAkB;;AAAQ;;AAC1B;;AAMF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;AA1BI;;AAAA;;;;;;;;;sEDMSR,c,EAAc;cAL1B,uDAK0B;eALhB;AACTV,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;AER3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaiB,iB;AAGX,iCAAoBR,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAClB,aAAKS,YAAL,GAAoB,KAAKT,WAAL,CAAiBE,KAAjB,CAAuB;AACzCQ,mBAAS,EAAE,EAD8B;AAEzCC,kBAAQ,EAAE,EAF+B;AAGzCC,iBAAO,EAAE,EAHgC;AAIzCC,eAAK,EAAE,EAJkC;AAKzCT,kBAAQ,EAAE;AAL+B,SAAvB,CAApB;AAOD;;;;mCAEO,CAAY;;;iCAEXC,Q,EAAU;AACjB,eAAKI,YAAL,CAAkBH,KAAlB;AACD;;;;;;;uBAjBUE,iB,EAAiB,2H;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,kyB;AAAA;AAAA;ACR9B;;AACE;;AAGE;AAAA,mBAAY,IAAAD,QAAA,wBAAZ;AAAwC,WAAxC;;AAEA;;AACE;;AAAuB;;AAAU;;AACjC;;AAOF;;AACA;;AACE;;AAAsB;;AAAS;;AAC/B;;AAOF;;AACA;;AACE;;AAAqB;;AAAO;;AAC5B;;AAOF;;AACA;;AACE;;AAAmB;;AAAK;;AACxB;;AAOF;;AACA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAOF;;AACA;;AAA8C;;AAAM;;AACtD;;AACF;;;;AAxDI;;AAAA;;;;;;;;;sEDMSC,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTnB,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;AER9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKauB,W;AAEX,6BAAc;AAAA;AAAG;;;;mCAEN;AACT,cAAIC,KAAK,GAAG9B,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ;AACA,iBAAO6B,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqB,YAAYA,KAAxC;AACD;;;;;;;uBAPUD,W;AAAW,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVE,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;ACLxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgFgB;;AACE;;AAAA;;AAAyM;;AAAO;;AAAW;;AAAQ;;AAAiD;;AAA+C;;AAAK;;AAAO;;AAC/U;;AAAA;;AACE;;AAAuC;;AAAyB;;AAChE;;AACF;;AACF;;;;;;AAH2C;;AAAA;;AACvC;;AAAA;;;;QDxEPC,Y;AASX,4BAAoBC,UAApB,EACUC,cADV,EACkDC,KADlD,EACyE;AAAA;;AADrD,aAAAF,UAAA,GAAAA,UAAA;AACV,aAAAC,cAAA,GAAAA,cAAA;AAAwC,aAAAC,KAAA,GAAAA,KAAA;AAA0B;;;;mCAEpE;AAAA;;AACN,eAAKC,GAAL,GAAW,KAAKD,KAAL,CAAWE,MAAX,CAAkBC,SAAlB,CAA4B,UAAAD,MAAM,EAAI;AAC/C,iBAAI,CAAC/C,EAAL,GAAU,CAAC+C,MAAM,CAAC,IAAD,CAAjB,CAD+C,CACtB;AAEzB;AACD,WAJU,CAAX;AAKA,eAAKJ,UAAL,CAAgBM,QAAhB,CAAyB,KAAKjD,EAA9B,EAAkCgD,SAAlC,CACE,UAAAE,IAAI,EAAI;AACN,iBAAI,CAACC,EAAL,GAAUD,IAAV;;AACA,iBAAI,CAACN,cAAL,CAAoBQ,iBAApB,CAAsC,KAAI,CAACD,EAAL,CAAQE,GAAR,CAAYrD,EAAlD,EAAsDgD,SAAtD,CACE,UAAAE,IAAI,EAAI;AACN,mBAAI,CAACI,QAAL,GAAgBJ,IAAhB;AACD,aAHH;AAKD,WARH;AAWD;;;sCAEU;AACT,eAAKK,OAAL,GAAe;AACbC,gBAAI,EAAE,KAAKL,EAAL,CAAQnD,EADD;AAEbyD,oBAAQ,EAAE,KAFG;AAGbC,gBAAI,EAAE,KAAKC,WAHE;AAIbC,wBAAY,EAAE,OAJD;AAKb5D,cAAE,EAAE,IALS;AAMb6D,iBAAK,EAAE;AANM,WAAf;AAQA,eAAKjB,cAAL,CAAoBkB,aAApB,CAAkC,KAAKP,OAAvC,EAAgDP,SAAhD;AACA,eAAKW,WAAL,GAAmB,EAAnB;AACD;;;;;;;uBA1CUjB,Y,EAAY,+H,EAAA,+I,EAAA,+H;AAAA,K;;;YAAZA,Y;AAAY,8B;AAAA,e;AAAA,c;AAAA,65H;AAAA;AAAA;ACZzB;;AACI;;AACI;;AACI;;AACI;;AACI;;AACE;;AAAA;;AAAgN;;AAAO;;AAAW;;AAAQ;;AAAiD;;AAA+C;;AAAS;;AAAO;;AAC1V;;AAAA;;AACE;;AACE;;AACE;;AAA+D;;AAAQ;;AACvE;;AAA+D;;AAAI;;AACrE;;AACF;;AACF;;AACF;;AACJ;;AACA;;AACI;;AAAuB;;AAAS;;AAChC;;AAAoF;AAAA;AAAA;;AAApF;;AACJ;;AACA;;AACI;;AAAuB;;AAAO;;AAC9B;;AAAiF;AAAA;AAAA;;AAAjF;;AACJ;;AACA;;AACI;;AAAuB;;AAAa;;AACpC;;AAAiF;AAAA;AAAA;;AAAjF;;AACJ;;AACA;;AACI;;AAAuB;;AAAmB;;AAC1C;;AAAkG;AAAA;AAAA;;AAAlG;;AACJ;;AACA;;AACI;;AAAuE;AAAA;AAAA;;AAAvE;;AACA;;AAAuD;;AAAa;;AACxE;;AACJ;;AACA;;AACI;;AACI;;AAAuB;;AAAK;;AAC5B;;AAAoF;AAAA;AAAA;;AAApF;;AACJ;;AACA;;AACI;;AAAuB;;AAAI;;AAC3B;;AAAoF;AAAA;AAAA;;AAApF;;AACJ;;AACA;;AACI;;AAAuB;;AAAI;;AAC3B;;AAAoF;AAAA;AAAA;;AAApF;;AACJ;;AACA;;AACI;;AAAuB;;AAAS;;AAChC;;AAAyF;AAAA;AAAA;;AAAzF;;AACJ;;AACA;;AACI;;AAAuB;;AAAO;;AAC9B;;AAAuF;AAAA;AAAA;;AAAvF;;AACJ;;AACA;;AACI;;AAAuB;;AAAW;;AAClC;;AAA2F;AAAA;AAAA;;AAA3F;;AACJ;;AACA;;AACI;;AAAuB;;AAAqB;;AAC5C;;AAAqG;AAAA;AAAA;;AAArG;;AACJ;;AACA;;AACI;;AAAuB;;AAAK;;AAC5B;;AAAqF;AAAA;AAAA;;AAArF;;AACJ;;AACA;;AACI;;AAAuB;;AAAK;;AAC5B;;AAAoF;AAAA;AAAA;;AAApF;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAgD;;AAAQ;;AACxD;;AAOA;;AACI;;AAAyE;AAAA;AAAA;;AAA4B;;AACrG;;AACA;;AAAmE;AAAA,mBAAW,IAAAqB,WAAA,EAAX;AAAwB,WAAxB;;AAA0B;;AAAO;;AACxG;;AACR;;AACJ;;AACJ;;AA9FA;;;;AAmBwG;;AAAA;;AAIH;;AAAA;;AAIA;;AAAA;;AAIiB;;AAAA;;AAG3B;;AAAA;;AAOa;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIK;;AAAA;;AAIF;;AAAA;;AAII;;AAAA;;AAIU;;AAAA;;AAIhB;;AAAA;;AAID;;AAAA;;AAOrD;;AAAA;;AAQ0C;;AAAA;;;;;;;;;sED5EhFrB,Y,EAAY;cALxB,uDAKwB;eALd;AACT5B,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACee;;AAAqD;;AAEnD;;;;;;AAFiC;;AAAkB;;AAAA;;;;;;AAarD;;AAGI;;AAAgB;;;;;;AADjB;;AACC;;AAAA;;;;;;AATP;;AAMG;;AAKH;;;;;;AAJM;;AAAA;;;;;;AAWH;;AAAqD;;AAEnD;;;;;;AAFiC;;AAAkB;;AAAA;;;;;;AAYrD;;AAA+D;;AAE7D;;;;;;AAFwC;;AAAqB;;AAAA;;;;;;AAc/D;;AAA4D;;AAE1D;;;;;;AAFuC;;AAAmB;;AAAA;;;;;;AA6H/D;;;;;;AAEG;;;;QDlLFgD,e;AAWX,+BAAoBvC,WAApB,EAAsDkB,UAAtD,EAA8E;AAAA;;AAA1D,aAAAlB,WAAA,GAAAA,WAAA;AAAkC,aAAAkB,UAAA,GAAAA,UAAA;AAJtD,aAAAsB,UAAA,GAAa,EAAb;AACA,aAAAC,SAAA,GAAuB,EAAvB;AAIE,aAAKC,UAAL,GAAkB,KAAK1C,WAAL,CAAiBE,KAAjB,CAAuB;AACvCyC,gBAAM,EAAE,CAAC,CAD8B;AAEvCC,iBAAO,EAAE,CAAC,CAF6B;AAGvCC,gBAAM,EAAE,CAAC,CAH8B;AAIvCC,mBAAS,EAAE,CAAC,CAJ2B;AAKvCC,oBAAU,EAAE,CAAC,CAL0B;AAMvCC,qBAAW,EAAE,CAN0B;AAOvCC,4BAAkB,EAAE,CAPmB;AAQvCC,qBAAW,EAAE,EAR0B;AASvCC,kBAAQ,EAAE,EAT6B;AAUvCC,gBAAM,EAAE,EAV+B;AAWvCC,4BAAkB,EAAE,CAXmB;AAYvCC,qBAAW,EAAE,CAAC,CAZyB;AAavCC,aAAG,EAAE,KAbkC;AAcvCC,mBAAS,EAAE;AAd4B,SAAvB,CAAlB;AAgBD;;;;mCAEO;AACN,eAAKC,OAAL;AACD;;;iCAEQpD,Q,EAAU;AACjB,eAAKqC,UAAL,CAAgBgB,KAAhB,CAAsBC,MAAtB,GAA+B,EAA/B,CADiB,CAEjB;AACA;AACA;;AACAtD,kBAAQ,CAACsD,MAAT,GAAkB,KAAKlB,SAAvB;AACA,eAAKvB,UAAL,CAAgB0C,SAAhB,CAA0BvD,QAA1B,EAAoCkB,SAApC,CAA8C;AAAA,mBAAMsC,KAAK,CAAC,UAAD,CAAX;AAAA,WAA9C;AACA,eAAKnB,UAAL,CAAgBpC,KAAhB;AACD;;;kCAES;AAAA;;AACR,eAAKY,UAAL,CAAgB4C,SAAhB,GACGvC,SADH,CACa,UAACE,IAAD;AAAA,mBAAmB,MAAI,CAACsC,MAAL,GAActC,IAAjC;AAAA,WADb;AAEA,eAAKP,UAAL,CAAgB8C,QAAhB,GACGzC,SADH,CACa,UAACE,IAAD;AAAA,mBAAkB,MAAI,CAACwC,KAAL,GAAaxC,IAA/B;AAAA,WADb;AAEA,eAAKP,UAAL,CAAgBgD,YAAhB,GACG3C,SADH,CACa,UAACE,IAAD;AAAA,mBAAqB,MAAI,CAAC0C,SAAL,GAAiB1C,IAAtC;AAAA,WADb;AAEA,eAAKP,UAAL,CAAgBkD,QAAhB,GACG7C,SADH,CACa,UAACE,IAAD;AAAA,mBAAkB,MAAI,CAAC4C,KAAL,GAAa5C,IAA/B;AAAA,WADb;AAEA,eAAKP,UAAL,CAAgBoD,aAAhB,GACG/C,SADH,CACa,UAACE,IAAD;AAAA,mBAAsB,MAAI,CAAC8C,UAAL,GAAkB9C,IAAxC;AAAA,WADb,EATQ,CAYR;AACD;;;qCAEY;AAAA;;AACX,eAAKwC,KAAL,CAAWO,OAAX,CAAmB,UAAAC,OAAO,EAAI;AAC5B,gBAAIA,OAAO,CAAClG,EAAR,IAAc,MAAI,CAACmE,UAAL,CAAgBgB,KAAhB,CAAsBf,MAAxC,EAAgD;AAC9C,oBAAI,CAAC+B,YAAL,GAAoBD,OAApB;AACD;AACF,WAJD;AAKD;;;mCAEUE,K,EAAO;AAAA;;AAChB,cAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsBF,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/C,gBAAIC,WAAW,GAAGH,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBE,MAArC;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAApB,EAAiCE,CAAC,EAAlC,EAAsC;AACpC,kBAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AAEA,mBAAK1C,UAAL,CAAgB2C,IAAhB,CAAqBR,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBG,CAAnB,CAArB;;AACAC,oBAAM,CAACG,MAAP,GAAgB,UAACT,KAAD,EAAgB;AAC9BU,uBAAO,CAACC,GAAR,CAAYX,KAAK,CAACC,MAAN,CAAaW,MAAzB;;AACA,sBAAI,CAAC9C,SAAL,CAAe0C,IAAf,CAAoBR,KAAK,CAACC,MAAN,CAAaW,MAAjC;AACD,eAHD;;AAKAN,oBAAM,CAACO,aAAP,CAAqBb,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBG,CAAnB,CAArB;AACD;AACF;AACF;;;;;;;uBAlFUzC,e,EAAe,2H,EAAA,0I;AAAA,K;;;YAAfA,e;AAAe,kC;AAAA,e;AAAA,a;AAAA,m2E;AAAA;AAAA;ACf5B;;AACG;;AAGG;AAAA,mBAAY,IAAAhC,QAAA,sBAAZ;AAAsC,WAAtC;;AAEA;;AACG;;AACG;;AAAkB;;AAAI;;AACtB;;AAIG;AAAA,mBAAU,IAAAkF,UAAA,EAAV;AAAsB,WAAtB;;AAEA;;AAGH;;AACH;;AACA;;AACG;;AAAmB;;AAAK;;AACxB;;AAYH;;AACH;;AACA;;AACG;;AACG;;AAAkB;;AAAI;;AACtB;;AACG;;AAGH;;AACH;;AACA;;AACG;;AAAqB;;AAAO;;AAC5B;;AAKG;;AAGH;;AACH;;AACH;;AACA;;AACG;;AACG;;AAAsB;;AAAK;;AAC3B;;AAKG;;AAGH;;AACH;;AACA;;AACG;;AAAyB;;AAAW;;AACpC;;AAOH;;AACH;;AACA;;AACG;;AACG;;AAAyB;;AAAqB;;AAC9C;;AAMH;;AACA;;AACG;;AAAyB;;AAAa;;AACtC;;AAMH;;AACH;;AACA;;AACG;;AACG;;AAAsB;;AAAS;;AAC/B;;AAMH;;AACA;;AACG;;AAAoB;;AAAO;;AAC3B;;AAMH;;AACH;;AACA;;AACG;;AAGG;;AACG;;AAOA;;AACG;;AACH;;AACH;;AACH;;AACA;;AACG;;AAAgC;;AAAmB;;AACnD;;AAQH;;AACH;;AACA;;AACG;;AACG;;AACG;;AAOA;;AACG;;AACH;;AACH;;AACH;;AACA;;AACG;;AAAuB;;AAAS;;AAChC;;AAKG;;AAAQ;;AAAC;;AACT;;AAAQ;;AAAC;;AACZ;;AACH;;AACH;;AACA;;AACG;;AACG;;AAAoB;;AAAM;;AAC1B;;AAMG;AAAA,mBAAU,IAAAC,UAAA,QAAV;AAA4B,WAA5B;;AANH;;AAQH;;AACA;;AACG;;AAKH;;AACH;;AAEA;;AACG;;AACH;;AACH;;AACH;;;;AAzMM;;AAAA;;AAaiB;;AAAA;;AAWR;;AAAA;;AAcQ;;AAAA;;AAYA;;AAAA;;AAcA;;AAAA;;AA4ER;;AAAA;;AAkDA;;AAAA;;;;;;;;;sEDjLFnD,e,EAAe;cAL3B,uDAK2B;eALjB;AACTlD,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEf5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACegB;;AAGG;;AAAsC;;;;;;AADvC;;AACC;;AAAA;;;;QDPNoG,mB;AAIX,mCAAoB3F,WAApB,EACoB4F,iBADpB,EAEoB1E,UAFpB,EAE4C;AAAA;;AAFxB,aAAAlB,WAAA,GAAAA,WAAA;AACA,aAAA4F,iBAAA,GAAAA,iBAAA;AACA,aAAA1E,UAAA,GAAAA,UAAA;AAClB,aAAK2E,iBAAL,GAAyB,KAAK7F,WAAL,CAAiBE,KAAjB,CAAuB;AAC9C4F,kBAAQ,EAAE,EADoC;AAE9CC,gBAAM,EAAE,EAFsC;AAG9C3D,eAAK,EAAE,CAAC;AAHsC,SAAvB,CAAzB;AAKA;;;;mCAGM;AACN,eAAKqB,OAAL;AACD;;;iCAEQpD,Q,EAAU;AACjB,cAAI2F,UAAU,GAAQ;AAClB7C,oBAAQ,EAAE9C,QAAQ,CAAC8C,QADD;AAElBC,kBAAM,EAAE/C,QAAQ,CAAC+C,MAFC;AAGlBhB,iBAAK,EAAE/B,QAAQ,CAAC+B;AAHE,WAAtB;AAKA,eAAKwD,iBAAL,CAAuBK,WAAvB,CAAmC5F,QAAnC,EAA6CkB,SAA7C;AACA,eAAKsE,iBAAL,CAAuBvF,KAAvB;AACD;;;kCAEM;AAAA;;AACL,eAAKY,UAAL,CAAgBgF,aAAhB,GAAgC3E,SAAhC,CAA0C,UAACE,IAAD;AAAA,mBAAqB,MAAI,CAAC0E,IAAL,GAAY1E,IAAjC;AAAA,WAA1C;AACD;;;;;;;uBA/BUkE,mB,EAAmB,2H,EAAA,6I,EAAA,+H;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,e;AAAA,a;AAAA,0vB;AAAA;AAAA;ACXhC;;AACI;;AACI;;AAGI;AAAA,mBAAY,IAAApF,QAAA,6BAAZ;AAA6C,WAA7C;;AAEJ;;AAAkD;;AAAc;;AAChE;;AACI;;AAAkB;;AAAI;;AACtB;;AAKI;;AAKJ;;AACJ;;AACA;;AACI;;AAAoB;;AAAS;;AAC7B;;AAOH;;AACA;;AACG;;AAAoB;;AAAO;;AAC3B;;AAOH;;AACA;;AACG;;AACH;;AACD;;AACJ;;AACJ;;;;AA5CY;;AAAA;;AAaM;;AAAA;;;;;;;;;sEDLLoF,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTtG,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYa6G,U;AACX,0BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;oCAE7B;AACV,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAuB,yEAAYC,GAAZ,GAAkB,YAAzC,CAAP;AACD;;;mCAEU;AACT,iBAAO,KAAKF,IAAL,CAAUC,GAAV,CAAsB,yEAAYC,GAAZ,GAAkB,WAAxC,CAAP;AACD;;;uCAEc;AACb,iBAAO,KAAKF,IAAL,CAAUC,GAAV,CAAyB,yEAAYC,GAAZ,GAAkB,cAA3C,CAAP;AACD;;;mCAEU;AACT,iBAAO,KAAKF,IAAL,CAAUC,GAAV,CAAsB,yEAAYC,GAAZ,GAAkB,WAAxC,CAAP;AACD;;;wCAEe;AACd,iBAAO,KAAKF,IAAL,CAAUC,GAAV,CAA0B,yEAAYC,GAAZ,GAAkB,eAA5C,CAAP;AACD;;;wCAEe;AACd;AACA,iBAAO,KAAKF,IAAL,CAAUC,GAAV,CAAmB,gCAAnB,CAAP;AACD;;;iCAEQ/H,E,EAAY;AACnB,iBAAO,KAAK8H,IAAL,CAAUC,GAAV,CAAmB,yEAAYC,GAAZ,GAAkB,UAAlB,GAA+BhI,EAAlD,CAAP,CADmB,CAEnB;AACD;;;kCAES8B,Q,EAAU;AAClBgF,iBAAO,CAACC,GAAR,CAAYjF,QAAZ;AACA,cAAIuB,GAAG,GAAQ;AACbe,kBAAM,EAAEtC,QAAQ,CAACsC,MADJ;AAEbC,mBAAO,EAAEvC,QAAQ,CAACuC,OAFL;AAGbC,kBAAM,EAAExC,QAAQ,CAACwC,MAHJ;AAIbC,qBAAS,EAAEzC,QAAQ,CAACyC,SAJP;AAKbC,sBAAU,EAAE1C,QAAQ,CAAC0C,UALR;AAMbY,kBAAM,EAAEtD,QAAQ,CAACsD,MANJ;AAObX,uBAAW,EAAE3C,QAAQ,CAAC2C,WAPT;AAQbC,8BAAkB,EAAE5C,QAAQ,CAAC4C,kBARhB;AASbuD,kBAAM,EAAE,CAAC;AATI,WAAf;AAWAnB,iBAAO,CAACC,GAAR,CAAY1D,GAAZ;AACA,cAAI6E,KAAK,GAAO;AACdC,kBAAM,EAAE9E,GADM;AAEd+E,wBAAY,EAAEtG,QAAQ,CAACkD,GAFT;AAGdF,8BAAkB,EAAEhD,QAAQ,CAACgD,kBAHf;AAIdF,oBAAQ,EAAE9C,QAAQ,CAAC8C,QAJL;AAKdC,kBAAM,EAAE/C,QAAQ,CAAC+C,MALH;AAMdF,uBAAW,EAAE7C,QAAQ,CAAC6C,WANR;AAOdI,uBAAW,EAAEjD,QAAQ,CAACiD;AAPR,WAAhB;AASA+B,iBAAO,CAACC,GAAR,CAAYmB,KAAZ;AACA,iBAAO,KAAKJ,IAAL,CAAUO,IAAV,CAAmB,yEAAYL,GAAZ,GAAkB,KAArC,EAA4CE,KAA5C,CAAP;AACD;;;wCAEe;AACd,iBAAO,KAAKJ,IAAL,CAAUC,GAAV,CAAmB,yEAAYC,GAAZ,GAAkB,mBAArC,CAAP;AACD;;;;;;;uBA9DUH,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU;;;;;sEAAVA,U,EAAU;cADtB;AACsB,Q;;;;;;;;;;;;;;;;;;;;;;ACbvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaS,iB;AAEX,iCAAoBR,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;oCAE7BS,Q,EAAe;AACzB;AACA,iBAAO,KAAKT,IAAL,CAAUO,IAAV,CAAoB,gCAApB,EAAsDE,QAAtD,CAAP;AACD;;;;;;;uBAPUD,iB,EAAiB,uH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACV7F,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEM;;AACG;;AAAuB;;AAA2B;;AAClD;;AAAG;;AAA6C;;AAChD;;AAAG;;AAA8C;;AACjD;;AACG;;AACH;;AACH;;;;;;AALM;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;;;;;AAGN;;AACG;;AAAuB;;AAA8B;;AACrD;;AAAG;;AAA6C;;AAChD;;AAAG;;AAA8C;;AACjD;;AACG;;AAEH;;AACH;;;;;;AANM;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;;;;;AAIN;;AACG;;AAAuB;;AAAwC;;AAC/D;;AAAG;;AAA+C;;AAClD;;AAAG;;AAAgD;;AACnD;;AACG;;AAEH;;AACH;;;;;;AANM;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;;;QDfC+F,mB;AAGX,mCAAoB7F,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAA2B;;;;mCAEvC;AAAA;;AACN,eAAKA,UAAL,CAAgB8F,aAAhB,GAAgCzF,SAAhC,CACE,UAACE,IAAD;AAAA,mBAAuB,MAAI,CAACwF,UAAL,GAAkBxF,IAAzC;AAAA,WADF,EAEE,UAAAyF,GAAG;AAAA,mBAAI7B,OAAO,CAAC8B,KAAR,CAAc,6BAAd,CAAJ;AAAA,WAFL;AAIAtD,eAAK,CAAC,KAAKoD,UAAL,CAAgBG,mBAAhB,CAAoCC,QAArC,CAAL;AACD;;;;;;;uBAXUN,mB,EAAmB,+H;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,c;AAAA,a;AAAA,yK;AAAA;AAAA;ACThC;;AACG;;AACG;;AAQA;;AASA;;AASH;;AACH;;;;AA3B6B;;AAAA;;AAQA;;AAAA;;AASA;;AAAA;;;;;;;;;sEDVhBA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT1H,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;AEThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsB2B;;AACG;;AACH;;;;;;AADG;;AAAA;;;;;;;;AAdZ;;AAGG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACG;;AACG;;AAIH;;AACA;;AACG;;AAGA;;AACG;;AAQH;;AAEA;;AACG;;AACH;;AACH;;AACH;;AACH;;;;;;AAnBa;;AAAA;;AAID;;AAAA;;AAWA;;AAAA;;;;;;AASZ;;AAMG;;AAOG;;AAAG;;AAAc;;AACjB;;AAAyB;;AAAiB;;AAC7C;;AACH;;;;;;AAfG;;AAMG;;AAAA;;AAMG;;AAAA;;;;;;;;AAff;;AACG;;AACG;;AAiBH;;AACA;;AACG;;AAEG;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACG;;AAMA;;AACG;;AACH;;AACH;;AACH;;AACH;;AACH;;;;;;AAhCS;;AAAA;;AAgBA;;AAAA;;;;QDvDR+H,a;AAOX,6BAAoBC,WAApB,EAAsDvH,WAAtD,EAAgF;AAAA;;AAA5D,aAAAuH,WAAA,GAAAA,WAAA;AAAkC,aAAAvH,WAAA,GAAAA,WAAA;AALtD,aAAAwH,KAAA,GAAgB,EAAhB;AAME,aAAKC,WAAL,GAAmB,KAAKzH,WAAL,CAAiBE,KAAjB,CAAuB;AAAE+B,cAAI,EAAE;AAAR,SAAvB,CAAnB;AACD;;;;mCAEO;AACN,eAAKyF,WAAL;AACD;;;sCAEa;AAAA;;AACZ,eAAKH,WAAL,CAAiBG,WAAjB,CAA6B,CAA7B,EACGnG,SADH,CACa,UAACE,IAAD;AAAA,mBAAkB,MAAI,CAAC+F,KAAL,GAAa/F,IAA/B;AAAA,WADb;AAED;;;wCAEekG,I,EAAY;AAC1B,eAAKC,WAAL,GAAmBD,IAAI,CAACE,SAAL,CAAetJ,EAAlC;AACA,eAAKuJ,QAAL,GAAgBH,IAAI,CAACG,QAArB;AACD;;;iCAEQC,I,EAAyB;AAAA;;AAChC,eAAKC,UAAL,GAAkB;AAChBzJ,cAAE,EAAE,CAAC,CADW;AAEhB0D,gBAAI,EAAE8F,IAAI,CAAC9F,IAFK;AAGhBgG,gBAAI,EAAE,IAAIC,IAAJ,EAHU;AAIhBC,gBAAI,EAAE,MAJU;AAKhBP,uBAAW,EAAE,KAAKA;AALF,WAAlB;AAOA,eAAKL,WAAL,CAAiBa,WAAjB,CAA6B,KAAKJ,UAAlC,EACGzG,SADH,CACa,UAACE,IAAD;AAAA,mBAAmB,MAAI,CAACqG,QAAL,CAAc3C,IAAd,CAAmB1D,IAAnB,CAAnB;AAAA,WADb;AAGA,eAAKgG,WAAL,CAAiBnH,KAAjB;AACD;;;;;;;uBArCUgH,a,EAAa,iI,EAAA,2H;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,sxB;AAAA;AAAA;ACX1B;;AACG;;AACG;;AACG;;AACG;;AACG;;AACG;;AAAI;;AAAM;;AACb;;AACA;;AACG;;AAiCH;;AACH;;AACA;;AAuCH;;AACH;;AACH;;AACH;;;;AA3EqB;;AAAA;;AAiCc;;AAAA;;;;;;;;;sEDjCtBA,a,EAAa;cALzB,uDAKyB;eALf;AACTjI,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa8I,W;AAEX,2BAAoBhC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;oCAG7BiC,O,EAAkB;AAC5B,iBAAO,KAAKjC,IAAL,CAAUO,IAAV,CAAwB,yEAAYL,GAAZ,GAAkB,UAA1C,EAAsD+B,OAAtD,CAAP;AACD;;;oCAGW9B,M,EAAgB;AAC1B,iBAAO,KAAKH,IAAL,CAAUC,GAAV,CAAsB,yEAAYC,GAAZ,GAAkB,WAAlB,GAAgCC,MAAtD,CAAP;AACD;;;;;;;uBAZU6B,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVrH,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACGO;;AACG;;AACG;;AAAuB;;AAA8B;;AACrD;;AAAqB;;AAAgB;;AACrC;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmC;;AAAM;;AACjG;;AAA0E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAoC;;AAAM;;AACvH;;AACH;;;;;;AAL6B;;AAAA;;AACF;;AAAA;;;;QDGrBuH,gB;AAIX,gCAAoBpH,cAApB,EAAoD;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAAmC;;;;mCAE/C;AAAA;;AACN,eAAKA,cAAL,CAAoBqH,WAApB,GAAkCjH,SAAlC,CACI,UAACE,IAAD;AAAA,mBAAwB,MAAI,CAACI,QAAL,GAAgBJ,IAAxC;AAAA,WADJ,EAEI,UAAAyF,GAAG;AAAA,mBAAI7B,OAAO,CAAC8B,KAAR,CAAc,2BAAd,CAAJ;AAAA,WAFP;AAID;;;kCACM;AAAA;;AACL,eAAKhG,cAAL,CAAoBqH,WAApB,GAAkCjH,SAAlC,CACG,UAACE,IAAD;AAAA,mBAAsB,OAAI,CAACI,QAAL,GAAgBJ,IAAtC;AAAA,WADH,EAEG,UAAAyF,GAAG;AAAA,mBAAI7B,OAAO,CAAC8B,KAAR,CAAc,2BAAd,CAAJ;AAAA,WAFN;AAIF;;;sCAEcrF,O,EAAY;AAAA;;AACxB,eAAKX,cAAL,CAAoBsH,cAApB,CAAmC3G,OAAO,CAACvD,EAA3C,EAA+C,KAA/C,EAAsDgD,SAAtD,CACE,UAAAE,IAAI,EAAI;AACJ4D,mBAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,mBAAI,CAACoD,OAAL;AACH,WAJH,EAKE,UAAAxB,GAAG,EAAI;AACH7B,mBAAO,CAAC8B,KAAR,CAAc,yBAAd;AACH,WAPH;AAQD;;;uCAEcrF,O,EAAY;AAAA;;AACzB,eAAKX,cAAL,CAAoBsH,cAApB,CAAmC3G,OAAO,CAACvD,EAA3C,EAA+C,IAA/C,EAAqDgD,SAArD,CACE,UAAAE,IAAI,EAAI;AACJ4D,mBAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,mBAAI,CAACoD,OAAL;AACH,WAJH,EAKE,UAAAxB,GAAG,EAAI;AACH7B,mBAAO,CAAC8B,KAAR,CAAc,yBAAd;AACH,WAPH;AAQD;;;;;;;uBAvCUoB,gB,EAAgB,uI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,8Y;AAAA;AAAA;ACT7B;;AACI;;AACG;;AAAkD;;AAAQ;;AAC1D;;AAQA;;AACN;;AAZD;;;;AAGY;;AAAA;;;;;;;;;sEDMCA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTlJ,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;AET7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaoJ,c;AAEX,8BAAoBtC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;sCAE3B;AACZ;AACA,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAmB,yEAAYC,GAAZ,GAAkB,kBAArC,CAAP;AACD;;;0CAEiBnE,K,EAAe;AAC/B;AACA,iBAAO,KAAKiE,IAAL,CAAUC,GAAV,CAAmB,yEAAYC,GAAZ,GAAkB,eAAlB,GAAoCnE,KAAvD,CAAP;AACD;;;uCAEc7D,E,EAAYqK,Q,EAAmB;AAC5C,iBAAO,KAAKvC,IAAL,CAAUC,GAAV,CAAoB,yEAAYC,GAAZ,GAAkB,sBAAlB,GAA2ChI,EAA3C,GAAgD,GAAhD,GAAsDqK,QAA1E,CAAP,CAD4C,CAE5C;AACD;;;sCAEa9G,O,EAAmB;AAC/B;AACA,iBAAO,KAAKuE,IAAL,CAAUO,IAAV,CAAe,yEAAYL,GAAZ,GAAkB,cAAjC,EAAiDzE,OAAjD,CAAP;AACD;;;;;;;uBAtBU6G,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACV3H,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa6H,Y;AAEX,4BAAoBxC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;oCAG/ByC,K,EAAU;AACpB,iBAAO,KAAKzC,IAAL,CAAUO,IAAV,CAAe,6BAAf,EAA8CkC,KAA9C,CAAP,CADoB,CAEnB;AACF;;;;;;;uBARYD,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACV7H,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMa+H,e;AAET,+BAAoBC,IAApB,EAAuC;AAAA;;AAAnB,aAAAA,IAAA,GAAAA,IAAA;AAEnB;;;;kCAESnL,G,EAAuBoL,I,EAAiB;AAC9C;AACA,cAAMC,SAAS,GAAG,KAAKF,IAAL,CAAUG,QAAV,EAAlB;;AACA,cAAID,SAAS,IAAI,EAAjB,EAAqB;AACjBrF,iBAAK,CAAC,eAAD,CAAL,CADiB,CAEjB;AACA;;AACA,gBAAMuF,OAAO,GAAGvL,GAAG,CAACwL,KAAJ,CAAU;AACtBC,qBAAO,EAAEzL,GAAG,CAACyL,OAAJ,CAAYC,GAAZ,CAAgB,eAAhB,EAAiCL,SAAjC;AADa,aAAV,CAAhB,CAJiB,CAQjB;;AACA,mBAAOD,IAAI,CAACO,MAAL,CAAYJ,OAAZ,CAAP;AACH,WAVD,MAUO;AACH,gBAAMK,OAAO,GAAG5L,GAAG,CAACwL,KAAJ,CAAU;AACtBC,qBAAO,EAAEzL,GAAG,CAACyL,OAAJ,CAAYC,GAAZ,CAAgB,cAAhB,EAAgC,kBAAhC;AADa,aAAV,CAAhB;AAGA,mBAAON,IAAI,CAACO,MAAL,CAAYC,OAAZ,CAAP;AACH;AACJ;;;;;;;uBAzBQV,e,EAAe,6H;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;;;;sEAAfA,e,EAAe;cAD3B;AAC2B,Q;;;;;;;;;;;;;;;;;;;;;;ACN5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC8Be;;AAGG;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACH;;;;;;;;AAGA;;AAEG;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AACH;;;;;;;;AAGA;;AAMG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACH;;;;;;;;AAtCN;;AACG;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AAAI;;AAAc;;AAClB;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAA4C;;AACnD;;AAEA;;AACG;;AAOH;;AACA;;AACG;;AAOH;;AACA;;AACG;;AAUH;;AACH;;;;;;AAtCU;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKD;;AAAA;;AASA;;AAAA;;AAUA;;AAAA;;;;;;;;AAaZ;;AACG;;AAA+C;;AAAiB;;AAChE;;AAIG;AAAA;AAAA,iBAAS,kBAAc,aAAd,CAAT;AAAqC,SAArC;;AAEA;;AAAyB;;AAAO;;AACnC;;AACH;;AACA;;AACG;;AAAQ;;AAAQ;;AAAQ;;AACxB;;AAMG;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AACA;;AACD;;AAAQ;;AAAO;;AAAQ;;AACvB;;AAAY;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAChD;;AACA;;AACG;;AAAmD;AAAA;;AAAA;;AAAA;AAAA;;AAChD;;AACH;;AACH;;;;;;AAVM;;AAAA;;AAIS;;AAAA,6FAAsB,KAAtB,EAAsB,CAAtB;;;;;;;;AA+Df;;AACG;;AAA+C;;AAAM;;AACrD;;AAIG;AAAA;AAAA,iBAAS,kBAAc,aAAd,CAAT;AAAqC,SAArC;;AAEA;;AAAyB;;AAAO;;AACnC;;AACH;;AACA;;AACG;;AAAQ;;AAAQ;;AAAQ;;AACxB;;AAMG;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AACA;;AACD;;AAAQ;;AAAqB;;AAAQ;;AACrC;;AAAqB;AAAA;;AAAA;;AAAA;AAAA;;AAArB;;AACH;;AACA;;AACG;;AAGG;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACH;;AACH;;;;;;AAdM;;AAAA;;AAIkB;;AAAA;;;;QD1JjBW,qB;AAeX,qCAAoBC,cAApB,EACUC,YADV,EAEUzI,cAFV,EAGU0I,YAHV,EAIUtC,WAJV,EAKUvH,WALV,EAMU8J,MANV,EAM0B;AAAA;;AANN,aAAAH,cAAA,GAAAA,cAAA;AACV,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAzI,cAAA,GAAAA,cAAA;AACA,aAAA0I,YAAA,GAAAA,YAAA;AACA,aAAAtC,WAAA,GAAAA,WAAA;AACA,aAAAvH,WAAA,GAAAA,WAAA;AACA,aAAA8J,MAAA,GAAAA,MAAA;AAfV,aAAAC,WAAA,GAAsB,CAAtB;AAe4B,aAAKtC,WAAL,GAAmB,KAAKzH,WAAL,CAAiBE,KAAjB,CAAuB;AAAE+B,cAAI,EAAE;AAAR,SAAvB,CAAnB;AAA0D;;;;mCAE9E;AACN,eAAK+H,OAAL;AACA,eAAK7B,IAAL,GAAYlJ,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAZ;AACD;;;6BAEI+K,O,EAASpM,G,EAAK;AACjB,eAAKqM,OAAL,GAAe,KAAKN,YAAL,CAAkBO,IAAlB,CAAuBF,OAAvB,CAAf;AACA,eAAKR,OAAL,GAAe5L,GAAf;AACD;;;mCAEUoM,O,EAASpM,G,EAAK;AACvB,eAAKuM,aAAL,GAAqB,KAAKR,YAAL,CAAkBO,IAAlB,CAAuBF,OAAvB,CAArB;AACA,eAAKR,OAAL,GAAe5L,GAAf;AACD;;;+BAEM;AACL,cAAI,KAAKwM,WAAL,IAAoBC,SAApB,IAAiC,KAAKD,WAAL,IAAoB,EAAzD,EAA6D;AAC3DxG,iBAAK,CAAC,0BAAD,CAAL;AACA;AACD;;AACD,cAAI/B,OAAO,GAAa;AACtBvD,cAAE,EAAE,IADkB;AAEtB0D,gBAAI,EAAE,KAAKoI,WAFW;AAGtBrI,oBAAQ,EAAE,KAHY;AAItBD,gBAAI,EAAE,KAAK0H,OAAL,CAAa1H,IAJG;AAKtBK,iBAAK,EAAE,IALe;AAMtBD,wBAAY,EAAE;AANQ,WAAxB;AAQA,eAAKhB,cAAL,CAAoBkB,aAApB,CAAkCP,OAAlC,EAA2CP,SAA3C;;AAEA,cAAI,KAAKwI,WAAL,IAAoB,CAAxB,EAA2B;AACzB,gBAAIjB,KAAK,GAAQ;AACfvK,gBAAE,EAAE,IADW;AAEfuK,mBAAK,EAAE,KAAKiB,WAFG;AAGfhI,kBAAI,EAAE,CAHS;AAIfK,mBAAK,EAAE,IAJQ;AAKfD,0BAAY,EAAE;AALC,aAAjB;AAOA,iBAAK0H,YAAL,CAAkBU,WAAlB,CAA8BzB,KAA9B,EAAqCvH,SAArC;AACD;;AACD,eAAK2I,OAAL,CAAaM,KAAb;AACD;;;qCAEY;AAAA;;AACX,cAAI,KAAKC,iBAAL,IAA0BH,SAA1B,IAAuC,KAAKG,iBAAL,IAA0B,EAAjE,IACF,KAAKzH,WAAL,IAAoBsH,SADlB,IAC+B,KAAKtH,WAAL,IAAoB,IADnD,IAC2D,KAAKA,WAAL,IAAoB,CADnF,EACsF;AACpFa,iBAAK,CAAC,sBAAD,CAAL;AACA;AACD;;AAED,cAAI6G,SAAS,GAAY;AACvBnM,cAAE,EAAE,IADmB;AAEvByE,uBAAW,EAAE,KAAKA,WAFK;AAGvBlB,mBAAO,EAAE,KAAK2I,iBAHS;AAIvBE,iBAAK,EAAE,KAAKlB,OAAL,CAAa1H;AAJG,WAAzB;AAMA,eAAK4H,cAAL,CAAoBiB,YAApB,CAAiCF,SAAjC,EAA4CnJ,SAA5C,CAAsD,UAAAE,IAAI,EAAI;AAC5D,mBAAI,CAACoJ,MAAL,GAAcpJ,IAAd;AACD,WAFD,EAEG,UAAAyF,GAAG,EAAI;AACRrD,iBAAK,CAAC,OAAD,CAAL;AACD,WAJD;AAMA,eAAKuG,aAAL,CAAmBI,KAAnB;AACD;AAED;;;;;;;;kCAMU;AAAA;;AACR,eAAKb,cAAL,CAAoBK,OAApB,GACGzI,SADH,CACa,UAACE,IAAD;AAAA,mBAAsB,OAAI,CAACqJ,QAAL,GAAgBrJ,IAAtC;AAAA,WADb;AAED;;;+BAEM5D,G,EAAe;AACpB,eAAKiM,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,MAAD,EAASlN,GAAG,CAACkE,IAAb,CAArB;AACD;;;iCAEQgG,I,EAAyB;AAChC,eAAKC,UAAL,GAAkB;AAChBzJ,cAAE,EAAE,CAAC,CADW;AAEhB0D,gBAAI,EAAE8F,IAAI,CAAC9F,IAFK;AAGhBgG,gBAAI,EAAE,IAAIC,IAAJ,EAHU;AAIhBC,gBAAI,EAAE,MAJU;AAKhBP,uBAAW,EAAE,KAAKA;AALF,WAAlB;AAOA,eAAKL,WAAL,CAAiBa,WAAjB,CAA6B,KAAKJ,UAAlC,EACGzG,SADH,CACa,YAAM;AACf8D,mBAAO,CAACC,GAAR,CAAY,cAAZ;AACD,WAHH;AAMA,eAAKmC,WAAL,CAAiBnH,KAAjB;AACD;;;qCAEYzC,G,EAAe;AAC1B,eAAK+J,WAAL,GAAmB/J,GAAG,CAAC2I,MAAvB;AACD;;;;;;;uBA1HUkD,qB,EAAqB,uI,EAAA,oI,EAAA,sJ,EAAA,kJ,EAAA,6I,EAAA,2H,EAAA,uH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,6hD;AAAA;AAAA;AClBlC;;AACG;;AACG;;AACG;;AACG;;AACG;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAa;;AAC7B;;AAAgB;;AAAY;;AAC5B;;AAAgB;;AAAW;;AAC3B;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAS;;AAC5B;;AAEA;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAe;;AAC/B;;AAAgB;;AAAI;;AACvB;;AACH;;AACA;;AACG;;AAyCH;;AACH;;AACA;;AAiCA;;AAQG;;AACG;;AACG;;AACG;;AAA+C;;AAAW;;AAC1D;;AAMG;;AAAyB;;AAAO;;AACnC;;AACH;;AACA;;AAEG;AAAA,mBAAY,IAAAnJ,QAAA,uBAAZ;AAAuC,WAAvC;;AAEA;;AACG;;AACG;;AACI;;AAAQ;;AAEZ;;AAKH;;AACH;;AACA;;AACG;;AAKG;;AACH;;AACA;;AACG;;AACH;;AACH;;AACH;;AACH;;AACH;;AACH;;AACA;;AAoCH;;;;AArKa;;AAAA;;AAkGE;;AAAA;;;;;;;;;sEDnGFmJ,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTrK,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC8Be;;AAGG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACH;;;;;;;;AAGA;;AAGG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACH;;;;;;;;AAGA;;AAGG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACH;;;;;;;;AAnCN;;AACG;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AAAI;;AAAc;;AAClB;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAA4C;;AACnD;;AAEA;;AACG;;AAOH;;AACA;;AACG;;AAOH;;AACA;;AACG;;AAOH;;AACH;;;;;;AAnCU;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKD;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;;;QDtCLyL,iB;AAOX,iCAAoBrB,cAApB,EAA4DG,MAA5D,EAA4E;AAAA;;AAAxD,aAAAH,cAAA,GAAAA,cAAA;AAAwC,aAAAG,MAAA,GAAAA,MAAA;AAH5D,aAAAC,WAAA,GAAsB,CAAtB;AAG+E;;;;mCAEvE;AACN,eAAKkB,WAAL;AACD;;;sCAEa;AAAA;;AACZ,eAAKtB,cAAL,CAAoBuB,SAApB,GACG3J,SADH,CACa,UAACE,IAAD;AAAA,mBAAsB,OAAI,CAACqJ,QAAL,GAAgBrJ,IAAtC;AAAA,WADb;AAED;;;+BAEM5D,G,EAAe;AACpB,cAAIA,GAAG,CAACsN,QAAJ,IAAgB,CAAC,CAArB,EACE,KAAKxB,cAAL,CAAoByB,aAApB,CAAkCvN,GAAG,CAACU,EAAtC,EACGgD,SADH,GADF,KAIE,KAAKoI,cAAL,CAAoB0B,YAApB,CAAiCxN,GAAG,CAACsN,QAArC,EACG5J,SADH;AAEH;;;+BAEM1D,G,EAAe;AACpB,cAAIA,GAAG,CAACsN,QAAJ,IAAgB,CAAC,CAArB,EACE,KAAKxB,cAAL,CAAoB2B,aAApB,CAAkCzN,GAAG,CAACU,EAAtC,EACGgD,SADH,GADF,KAIE,KAAKoI,cAAL,CAAoB4B,YAApB,CAAiC1N,GAAG,CAACsN,QAArC,EACG5J,SADH;AAEH;;;+BAEM1D,G,EAAe;AACpB,cAAIA,GAAG,CAACsN,QAAJ,IAAgB,CAAC,CAArB,EACE,KAAKxB,cAAL,CAAoB6B,aAApB,CAAkC3N,GAAG,CAACU,EAAtC,EAA0CgD,SAA1C,GADF,KAGE,KAAKoI,cAAL,CAAoB8B,YAApB,CAAiC5N,GAAG,CAACsN,QAArC,EAA+C5J,SAA/C;AACH;;;+BAEM1D,G,EAAe;AACpB,eAAKiM,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,MAAD,EAASlN,GAAG,CAACkE,IAAb,CAArB;AACD;;;;;;;uBA7CUiJ,iB,EAAiB,uI,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,8N;AAAA;AAAA;ACX9B;;AACG;;AACG;;AACG;;AACG;;AACG;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAa;;AAC7B;;AAAgB;;AAAY;;AAC5B;;AAAgB;;AAAW;;AAC3B;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAS;;AAC5B;;AAEA;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAM;;AACzB;;AACH;;AACA;;AACG;;AAsCH;;AACH;;AACH;;;;AAxCa;;AAAA;;;;;;;;;sEDRAA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT3L,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASamM,c;AAEX,8BAAoBrF,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;sCAE3B;AACZ;AACA,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAA0B,yEAAYC,GAAZ,GAAkB,YAA5C,CAAP;AACD;;;oCAEW;AACV,iBAAO,KAAKF,IAAL,CAAUC,GAAV,CAA0B,yEAAYC,GAAZ,GAAkB,mBAA5C,CAAP;AACD;;;kCAES;AACR,iBAAO,KAAKF,IAAL,CAAUC,GAAV,CAA0B,yEAAYC,GAAZ,GAAkB,iBAA5C,CAAP;AACD;;;sCAEaoF,K,EAAO;AACnB,iBAAO,KAAKtF,IAAL,CAAUuF,KAAV,CAAgB,yEAAYrF,GAAZ,GAAkB,iBAAlC,EAAqD;AAAEhI,cAAE,EAAEoN;AAAN,WAArD,CAAP;AACD;;;qCAEYR,Q,EAAU;AACrB,iBAAO,KAAK9E,IAAL,CAAUuF,KAAV,CAAgB,yEAAYrF,GAAZ,GAAkB,gBAAlC,EAAoD;AAAEhI,cAAE,EAAE4M;AAAN,WAApD,CAAP;AACD;;;sCAEaQ,K,EAAO;AACnB,iBAAO,KAAKtF,IAAL,CAAUuF,KAAV,CAAgB,yEAAYrF,GAAZ,GAAkB,iBAAlC,EAAqD;AAAEhI,cAAE,EAAEoN;AAAN,WAArD,CAAP;AACD;;;qCAEYR,Q,EAAU;AACrB,iBAAO,KAAK9E,IAAL,CAAUuF,KAAV,CAAgB,yEAAYrF,GAAZ,GAAkB,gBAAlC,EAAoD;AAAEhI,cAAE,EAAE4M;AAAN,WAApD,CAAP;AACD;;;sCAEaQ,K,EAAO;AACnB,iBAAO,KAAKtF,IAAL,CAAUuF,KAAV,CAAgB,yEAAYrF,GAAZ,GAAkB,iBAAlC,EAAqD;AAAEhI,cAAE,EAAEoN;AAAN,WAArD,CAAP;AACD;;;qCAEYR,Q,EAAU;AACrB,iBAAO,KAAK9E,IAAL,CAAUuF,KAAV,CAAgB,yEAAYrF,GAAZ,GAAkB,gBAAlC,EAAoD;AAAEhI,cAAE,EAAE4M;AAAN,WAApD,CAAP;AACD;;;qCAEYN,M,EAAiB;AAC5B,iBAAO,KAAKxE,IAAL,CAAUO,IAAV,CAAoB,yEAAYL,GAAZ,GAAkB,SAAtC,EAAiDsE,MAAjD,CAAP;AACD;;;;;;;uBA3CUa,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACV1K,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACT3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM6K,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBvF,SAAG,EAAE;AAFoB,KAApB;AAKP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AChBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYuF,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA7E,GAAG;AAAA,aAAI7B,OAAO,CAAC8B,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { RegisterComponent } from './auth/register/register.component';\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport { RequestsComponent } from \"./requests/requests.component\";\r\nimport { NewCarComponent } from \"./car/new-car/new-car.component\";\r\nimport { CarComponent } from \"./car/car.component\";\r\nimport { CommentComponent } from './comment/comment.component';\r\nimport { OccupationComponent } from './car/occupation/occupation.component';\r\nimport { PastRequestsComponent } from './requests/past-requests/past-requests.component';\r\nimport { StatisticsComponent } from './car/statistics/statistics.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'chat', component: ChatComponent },\r\n  { path: 'requests', component: RequestsComponent },\r\n  { path: 'past-requests', component: PastRequestsComponent },\r\n  { path: 'car/:id', component: CarComponent },\r\n  { path: 'new-car', component: NewCarComponent },\r\n  { path: 'comments', component: CommentComponent },\r\n  { path: 'statistics', component: StatisticsComponent },\r\n  { path: 'occupation', component: OccupationComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes), NgbModule],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'rent-a-car';\n  role: string = localStorage.getItem('User-role');\n\n  ngOnInit(): void {\n    localStorage.setItem('User-role', 'ROLE_AGENT');\n  }\n\n  change() {\n    if (localStorage.getItem('User-role') == 'ROLE_USER')\n      localStorage.setItem('User-role', 'ROLE_AGENT');\n    else\n      localStorage.setItem('User-role', 'ROLE_USER');\n    this.role = localStorage.getItem('User-role');\n  }\n}\n","<div>\r\n   <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n         <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\r\n         </li>\r\n         <li class=\"nav-item\">\r\n            <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\r\n         </li>\r\n         <li class=\"nav-item\">\r\n            <a class=\"nav-link\" [routerLink]=\"['/chat']\">Chat</a>\r\n         </li>\r\n         <li class=\"nav-item\">\r\n            <a class=\"nav-link\" [routerLink]=\"['/requests']\">Active requests</a>\r\n         </li>\r\n         <li class=\"nav-item\">\r\n            <a class=\"nav-link\" [routerLink]=\"['/past-requests']\"\r\n               >Past requests</a\r\n            >\r\n         </li>\r\n         <li class=\"nav-item\">\r\n            <a class=\"nav-link\" [routerLink]=\"['/new-car']\">New car</a>\r\n         </li>\r\n         <li class=\"nav-item\">\r\n            <a class=\"nav-link\" [routerLink]=\"['/comments']\">Comments</a>\r\n         </li>\r\n         <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/occupation']\">Occupation</a>\r\n        </li>\r\n         <li class=\"nav-item\" *ngIf=\"role == 'ROLE_AGENT'\">\r\n            <a class=\"nav-link\" [routerLink]=\"['/statistics']\">Statistics</a>\r\n         </li>\r\n      </ul>\r\n\r\n      <label for=\"switch\" class=\"p-2\" value=\"Agent\">Agent</label>\r\n      <!-- Rounded switch -->\r\n      <label class=\"switch\">\r\n         <input type=\"checkbox\" />\r\n         <span class=\"slider round\" (click)=\"change()\"></span> </label\r\n      ><label for=\"switch\" class=\"p-2\" value=\"User\">User</label>\r\n   </nav>\r\n   <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { RegisterComponent } from './auth/register/register.component';\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport { RequestsComponent } from './requests/requests.component';\r\nimport { NewCarComponent } from './car/new-car/new-car.component';\r\nimport { CarComponent } from './car/car.component';\r\nimport { OccupationComponent } from './car/occupation/occupation.component';\r\n\r\nimport { CarService } from './car/shared/car.service';\r\nimport { RequestService } from './requests/shared/request.service';\r\nimport { AuthService } from './auth/shared/auth.service';\r\nimport { ChatService } from './chat/shared/chat.service';\r\nimport { AuthInterceptor } from './http-interceptors/auth-interceptor';\r\nimport { CommentComponent } from './comment/comment.component';\r\nimport { PastRequestsComponent } from './requests/past-requests/past-requests.component';\r\nimport { StatisticsComponent } from './car/statistics/statistics.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ChatComponent,\r\n    RequestsComponent,\r\n    NewCarComponent,\r\n    CarComponent,\r\n    OccupationComponent,\r\n    CommentComponent,\r\n    PastRequestsComponent,\r\n    StatisticsComponent,\r\n  ],\r\n  imports: [NgbModule, BrowserModule, AppRoutingModule, HttpClientModule, FormsModule, ReactiveFormsModule],\r\n  providers: [CarService, RequestService, AuthService, ChatService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm;\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: '',\r\n      password: '',\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onSubmit(userData: Object): void {\r\n    // sent to back-end\r\n    this.loginForm.reset();\r\n  }\r\n}\r\n","<div class=\"d-flex p-2 justify-content-center\">\r\n  <form\r\n    [formGroup]=\"loginForm\"\r\n    class=\"col-sm-4\"\r\n    (ngSubmit)=\"onSubmit(loginForm.value)\"\r\n  >\r\n    <div class=\"form-group\">\r\n      <label for=\"username\">Username</label>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        id=\"username\"\r\n        formControlName=\"username\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"pass\">Password</label>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"password\"\r\n        formControlName=\"password\"\r\n        id=\"password\"\r\n      />\r\n    </div>\r\n    <button class=\"btn btn-primary m-3\" type=\"submit\">\r\n      Login\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Form, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm;\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: '',\r\n      lastName: '',\r\n      address: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  onSubmit(userData) {\r\n    this.registerForm.reset();\r\n  }\r\n}\r\n","<div class=\"d-flex p-2 justify-content-center\">\r\n  <form\r\n    [formGroup]=\"registerForm\"\r\n    class=\"needs-validation col-sm-4\"\r\n    (ngSubmit)=\"onSubmit(registerForm.value)\"\r\n  >\r\n    <div class=\"form-group\">\r\n      <label for=\"firstName\">First name</label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"firstName\"\r\n        id=\"firstName\"\r\n        class=\"form-control\"\r\n        required\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"lastName\">Last name</label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"lastName\"\r\n        id=\"lastName\"\r\n        class=\"form-control\"\r\n        required\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"address\">Address</label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"address\"\r\n        id=\"address\"\r\n        class=\"form-control\"\r\n        required\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email</label>\r\n      <input\r\n        type=\"email\"\r\n        formControlName=\"email\"\r\n        id=\"email\"\r\n        class=\"form-control\"\r\n        required\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password</label>\r\n      <input\r\n        type=\"password\"\r\n        formControlName=\"password\"\r\n        id=\"password\"\r\n        class=\"form-control\"\r\n        required\r\n      />\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor() { }\r\n\r\n  getToken() {\r\n    let token = localStorage.getItem(\"User-token\");\r\n    return token == null ? '' : 'Bearer ' + token;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CarService } from './shared/car.service';\r\nimport { CommentService } from '../comment/shared/comment.service';\r\nimport { IComment } from '../comment/shared/comment';\r\nimport { AdInfo } from './shared/adInfo';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-car',\r\n  templateUrl: './car.component.html',\r\n  styleUrls: ['./car.component.css']\r\n})\r\nexport class CarComponent implements OnInit {\r\n\r\n  ad: AdInfo;\r\n  commentText: string;\r\n  comment: IComment;\r\n  comments: IComment[];\r\n  id: number;\r\n  private sub: any;\r\n\r\n  constructor(private carService: CarService,\r\n    private commentService: CommentService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sub = this.route.params.subscribe(params => {\r\n      this.id = +params['id']; // (+) converts string 'id' to a number\r\n\r\n      // In a real app: dispatch action to load the details here.\r\n    });\r\n    this.carService.getOneAd(this.id).subscribe(\r\n      data => {\r\n        this.ad = data;\r\n        this.commentService.getCommentsForCar(this.ad.car.id).subscribe(\r\n          data => {\r\n            this.comments = data\r\n          }\r\n        );\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  sendComment(): void {\r\n    this.comment = {\r\n      adId: this.ad.id,\r\n      approved: false,\r\n      text: this.commentText,\r\n      userUsername: 'agent',\r\n      id: null,\r\n      carId: null\r\n    };\r\n    this.commentService.createComment(this.comment).subscribe();\r\n    this.commentText = \"\";\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n    <div class=\"d-flex flex-column col-sm-8 \" style=\"background-color:lightgray;\">\r\n        <div class=\"d-flex flex-row \" style=\"margin-top: 5px;\">\r\n            <div class=\"my-3 p-3 bg-white rounded shadow-sm\" style=\"width: 50%; height: 800px; background-color: aqua; margin-right: 5px;\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card mb-4 shadow-sm\">\r\n                      <svg class=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"250\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\" aria-label=\"Placeholder: Thumbnail\"><title>Placeholder</title><rect width=\"100%\" height=\"100%\" fill=\"#55595c\"/><text x=\"50%\" y=\"50%\" fill=\"#eceeef\" dy=\".3em\">Thumbnail</text></svg>\r\n                      <div class=\"card-body\">\r\n                        <div class=\"d-flex justify-content-between align-items-center\">\r\n                          <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">previous</button>\r\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">next</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-9 mb-3\">\r\n                    <label for=\"firstName\">From date</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"From\" value=\"\"  [(ngModel)] = \"ad.fromDate\" disabled>\r\n                </div>\r\n                <div class=\"col-md-9 mb-3\">\r\n                    <label for=\"firstName\">To date</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"To\" value=\"\" [(ngModel)] = \"ad.toDate\" disabled>\r\n                </div>\r\n                <div class=\"col-md-9 mb-3\">\r\n                    <label for=\"firstName\">Pick up place</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"To\" value=\"\" [(ngModel)] = \"ad.pickUpPlace\" disabled>\r\n                </div>\r\n                <div class=\"col-md-9 mb-3\">\r\n                    <label for=\"firstName\">Allowed kilometrage</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Allowed kilometrage\" value=\"\" [(ngModel)] = \"ad.allowedKilometrage\" disabled>\r\n                </div>\r\n                <div class=\"custom-control custom-checkbox\" style=\"margin-left: 20px; margin-top: 30px;\">\r\n                    <input type=\"checkbox\"  class=\"custom-control-input\" id=\"same-address\" [(ngModel)] = \"ad.cdwAvailable\" disabled >\r\n                    <label class=\"custom-control-label\" for=\"same-address\">CDW available</label>\r\n                </div>\r\n            </div>\r\n            <div class=\"my-3 p-3 bg-white rounded shadow-sm\" style=\"width: 50%; height: 800px; background-color:azure; margin-left: 5px; \">\r\n                <div class=\"col-md-9 mb-3\">\r\n                    <label for=\"firstName\">Model</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Model\" value=\"\" [(ngModel)] = \"ad.car.model.name\" disabled>\r\n                </div>\r\n                <div class=\"col-md-9 mb-3\">\r\n                    <label for=\"firstName\">Mark</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Mark\" value=\"\"  [(ngModel)] = \"ad.car.mark.name\" disabled>\r\n                </div>\r\n                <div class=\"col-md-9 mb-3\">\r\n                    <label for=\"firstName\">Fuel</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Fuel\" value=\"\"  [(ngModel)] = \"ad.car.fuel.type\" disabled>\r\n                </div>\r\n                <div class=\"col-md-9 mb-3\">\r\n                    <label for=\"firstName\">Car Class</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Car class\" value=\"\"  [(ngModel)] = \"ad.car.carClass.name\" disabled>\r\n                </div>\r\n                <div class=\"col-md-9 mb-3\">\r\n                    <label for=\"firstName\">Gearbox</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Gearbox\" value=\"\"  [(ngModel)] = \"ad.car.gearbox.type\" disabled>\r\n                </div>\r\n                <div class=\"col-md-9 mb-3\">\r\n                    <label for=\"firstName\">Kilometrage</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Kilometrage\" value=\"\"  [(ngModel)] = \"ad.car.kilometrage\" disabled>\r\n                </div>\r\n                <div class=\"col-md-9 mb-3\">\r\n                    <label for=\"firstName\">Number of child seats</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Number of child seats\" value=\"\"  [(ngModel)] = \"ad.car.numberOfChildSeats\" disabled>\r\n                </div>\r\n                <div class=\"col-md-9 mb-3\">\r\n                    <label for=\"firstName\">Grade</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Grade\" value=\"\"  [(ngModel)] = \"ad.car.overallGrade\" disabled>\r\n                </div>\r\n                <div class=\"col-md-9 mb-4\">\r\n                    <label for=\"firstName\">Price</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Price\" value=\"\" [(ngModel)] = \"ad.car.numberOfChildSeats\" disabled>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div class=\"my-3 p-3 bg-white rounded shadow-sm\">\r\n                <h6 class=\"border-bottom border-gray pb-2 mb-0\">Comments</h6>\r\n                <div class=\"media text-muted pt-3\" *ngFor = \" let comment of comments\">\r\n                  <svg class=\"bd-placeholder-img mr-2 rounded\" width=\"32\" height=\"32\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\" aria-label=\"Placeholder: 32x32\"><title>Placeholder</title><rect width=\"100%\" height=\"100%\" fill=\"#007bff\"/><text x=\"50%\" y=\"50%\" fill=\"#007bff\" dy=\".3em\">32x32</text></svg>\r\n                  <p class=\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\">\r\n                    <strong class=\"d-block text-gray-dark\">@{{comment.userUsername}}</strong>\r\n                    {{comment.text}}\r\n                  </p>\r\n                </div>\r\n                <div class=\"media text-muted pt-3 d-flex flex-column\">\r\n                    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" [(ngModel)] = \"commentText\"></textarea>\r\n                    <br>\r\n                    <button type=\"button\" class=\"btn btn-primary\" style=\"float: left;\" (click) = \"sendComment()\">Comment</button>\r\n                </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { CarService } from 'src/app/car/shared/car.service';\r\nimport { CarClass } from 'src/app/car/shared/carclass';\r\nimport { Fuel } from 'src/app/car/shared/fuel';\r\nimport { Gearbox } from 'src/app/car/shared/gearbox';\r\nimport { Mark } from 'src/app/car/shared/mark';\r\nimport { Model } from 'src/app/car/shared/model';\r\nimport { MyImage } from '../shared/my-image';\r\n\r\n@Component({\r\n  selector: 'app-new-car',\r\n  templateUrl: './new-car.component.html',\r\n  styleUrls: ['./new-car.component.css']\r\n})\r\nexport class NewCarComponent implements OnInit {\r\n  newCarForm;\r\n  models: Model[];\r\n  marks: Mark[];\r\n  fuels: Fuel[];\r\n  gearboxes: Gearbox[];\r\n  carClasses: CarClass[];\r\n  imageFiles = [];\r\n  imageURLs: MyImage[] = [];\r\n  selectedMark: Mark;\r\n\r\n  constructor(private formBuilder: FormBuilder, private carService: CarService) {\r\n    this.newCarForm = this.formBuilder.group({\r\n      markId: -1,\r\n      modelId: -1,\r\n      fuelId: -1,\r\n      gearboxId: -1,\r\n      carClassId: -1,\r\n      kilometrage: 0,\r\n      numberOfChildSeats: 0,\r\n      pickUpPlace: '',\r\n      fromDate: '',\r\n      toDate: '',\r\n      allowedKilometrage: 0,\r\n      priceListId: -1,\r\n      cdw: false,\r\n      isAllowed: false\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getData();\r\n  }\r\n\r\n  onSubmit(userData) {\r\n    this.newCarForm.value.images = [];\r\n    // for (var i = 0; i < this.imageFiles.length; i++) {\r\n    // this.newCarForm.value.images.push(this.imageFiles[i]);\r\n    // }\r\n    userData.images = this.imageURLs;\r\n    this.carService.postNewAd(userData).subscribe(() => alert(\"success!\"));\r\n    this.newCarForm.reset();\r\n  }\r\n\r\n  getData() {\r\n    this.carService.getModels()\r\n      .subscribe((data: Model[]) => this.models = data);\r\n    this.carService.getMarks()\r\n      .subscribe((data: Mark[]) => this.marks = data);\r\n    this.carService.getGearboxes()\r\n      .subscribe((data: Gearbox[]) => this.gearboxes = data);\r\n    this.carService.getFuels()\r\n      .subscribe((data: Fuel[]) => this.fuels = data);\r\n    this.carService.getCarClasses()\r\n      .subscribe((data: CarClass[]) => this.carClasses = data);\r\n\r\n    // pricelist\r\n  }\r\n\r\n  markChange() {\r\n    this.marks.forEach(element => {\r\n      if (element.id == this.newCarForm.value.markId) {\r\n        this.selectedMark = element\r\n      }\r\n    });\r\n  }\r\n\r\n  fileUpload(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n\r\n        this.imageFiles.push(event.target.files[i]);\r\n        reader.onload = (event: any) => {\r\n          console.log(event.target.result)\r\n          this.imageURLs.push(event.target.result);\r\n        }\r\n\r\n        reader.readAsDataURL(event.target.files[i]);\r\n      }\r\n    }\r\n  }\r\n}","<div class=\"d-flex p-2 justify-content-center\">\r\n   <form\r\n      [formGroup]=\"newCarForm\"\r\n      class=\"needs-validation col-sm-8\"\r\n      (ngSubmit)=\"onSubmit(newCarForm.value)\"\r\n   >\r\n      <div class=\"form-row\">\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"mark\">Mark</label>\r\n            <select\r\n               class=\"form-control\"\r\n               formControlName=\"markId\"\r\n               id=\"mark\"\r\n               (change)=\"markChange()\"\r\n            >\r\n               <option *ngFor=\"let mark of marks\" [value]=\"mark.id\">{{\r\n                  mark.name\r\n               }}</option>\r\n            </select>\r\n         </div>\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"model\">Model</label>\r\n            <select\r\n               class=\"form-control\"\r\n               formControlName=\"modelId\"\r\n               id=\"model\"\r\n               *ngIf=\"selectedMark\"\r\n            >\r\n               <option\r\n                  *ngFor=\"let model of selectedMark.models\"\r\n                  [value]=\"model.id\"\r\n                  >{{ model.name }}</option\r\n               >\r\n            </select>\r\n         </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"fuel\">Fuel</label>\r\n            <select class=\"form-control\" formControlName=\"fuelId\" id=\"fuel\">\r\n               <option *ngFor=\"let fuel of fuels\" [value]=\"fuel.id\">{{\r\n                  fuel.type\r\n               }}</option>\r\n            </select>\r\n         </div>\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"gearbox\">Gearbox</label>\r\n            <select\r\n               class=\"form-control\"\r\n               formControlName=\"gearboxId\"\r\n               id=\"gearbox\"\r\n            >\r\n               <option *ngFor=\"let gearbox of gearboxes\" [value]=\"gearbox.id\">{{\r\n                  gearbox.type\r\n               }}</option>\r\n            </select>\r\n         </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"carClass\">Class</label>\r\n            <select\r\n               class=\"form-control\"\r\n               formControlName=\"carClassId\"\r\n               id=\"carClass\"\r\n            >\r\n               <option *ngFor=\"let class of carClasses\" [value]=\"class.id\">{{\r\n                  class.name\r\n               }}</option>\r\n            </select>\r\n         </div>\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"kilometrage\">Kilometrage</label>\r\n            <input\r\n               type=\"number\"\r\n               formControlName=\"kilometrage\"\r\n               name=\"kilometrage\"\r\n               id=\"kilometrage\"\r\n               class=\"form-control\"\r\n            />\r\n         </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"kilometrage\">Number of child seats</label>\r\n            <input\r\n               type=\"number\"\r\n               formControlName=\"numberOfChildSeats\"\r\n               id=\"numberOfChildSeats\"\r\n               class=\"form-control\"\r\n            />\r\n         </div>\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"pickUpPlace\">Pick up place</label>\r\n            <input\r\n               type=\"text\"\r\n               formControlName=\"pickUpPlace\"\r\n               id=\"pickUpPlace\"\r\n               class=\"form-control\"\r\n            />\r\n         </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"fromDate\">From date</label>\r\n            <input\r\n               type=\"date\"\r\n               formControlName=\"fromDate\"\r\n               id=\"fromDate\"\r\n               class=\"form-control\"\r\n            />\r\n         </div>\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"toDate\">To date</label>\r\n            <input\r\n               type=\"date\"\r\n               formControlName=\"toDate\"\r\n               id=\"toDate\"\r\n               class=\"form-control\"\r\n            />\r\n         </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n         <div\r\n            class=\"form-check col-sm-6 align-self-center justify-content-center\"\r\n         >\r\n            <div class=\"col-sm-8\">\r\n               <input\r\n                  class=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  value=\"false\"\r\n                  id=\"isAllowed\"\r\n                  formControlName=\"isAllowed\"\r\n               />\r\n               <label class=\"form-check-label\" for=\"isAllowed\">\r\n                  Is kilometrage fixed?\r\n               </label>\r\n            </div>\r\n         </div>\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"allowedKilometrage\">Allowed kilometrage</label>\r\n            <input\r\n               [attr.disabled]=\"newCarForm.value.isAllowed ? null : ''\"\r\n               type=\"number\"\r\n               formControlName=\"allowedKilometrage\"\r\n               name=\"allowedKilometrage\"\r\n               id=\"allowedKilometrage\"\r\n               class=\"form-control\"\r\n            />\r\n         </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n         <div class=\"form-check col-sm-6 align-self-center\">\r\n            <div class=\"col-sm-8 justify-self-center\">\r\n               <input\r\n                  class=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  value=\"false\"\r\n                  id=\"cdw\"\r\n                  formControlName=\"cdw\"\r\n               />\r\n               <label class=\"form-check-label\" for=\"cdw\">\r\n                  Collision damage waiver\r\n               </label>\r\n            </div>\r\n         </div>\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"pricelist\">Pricelist</label>\r\n            <select\r\n               class=\"form-control\"\r\n               formControlName=\"priceListId\"\r\n               id=\"pricelist\"\r\n            >\r\n               <option>1</option>\r\n               <option>2</option>\r\n            </select>\r\n         </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n         <div class=\"form-group col-sm-6\">\r\n            <label for=\"Images\">Images</label>\r\n            <input\r\n               type=\"file\"\r\n               id=\"image\"\r\n               accept=\"image/*\"\r\n               class=\"form-control\"\r\n               multiple\r\n               (change)=\"fileUpload($event)\"\r\n            />\r\n         </div>\r\n         <div class=\"col-sm-6\">\r\n            <img\r\n               *ngFor=\"let url of imageURLs\"\r\n               [src]=\"url\"\r\n               style=\"max-width: 100px; max-height: 100px;\"\r\n            />\r\n         </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary\">\r\n         Submit\r\n      </button>\r\n   </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { OccupationService } from '../shared/occupation.service';\r\nimport { CarService } from '../shared/car.service';\r\nimport { CarInfo } from '../shared/carInfo';\r\n\r\n@Component({\r\n  selector: 'app-occupation',\r\n  templateUrl: './occupation.component.html',\r\n  styleUrls: ['./occupation.component.css']\r\n})\r\nexport class OccupationComponent implements OnInit {\r\n  newOccupationForm;\r\n  cars : CarInfo[];\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private occupationService: OccupationService,\r\n              private carService: CarService) {\r\n    this.newOccupationForm = this.formBuilder.group({\r\n      dateFrom: '',\r\n      dateTo: '',\r\n      carId: -1\r\n    });\r\n   }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getData();\r\n  }\r\n\r\n  onSubmit(userData) {\r\n    let occupation: any = {\r\n        fromDate: userData.fromDate,\r\n        toDate: userData.toDate,\r\n        carId: userData.carId\r\n    };\r\n    this.occupationService.setOccupied(userData).subscribe();\r\n    this.newOccupationForm.reset();\r\n  }\r\n\r\n  getData(){\r\n    this.carService.getCarsByUser().subscribe((data: CarInfo[]) => this.cars = data);\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n    <div class=\"d-flex flex-column col-sm-3 \" style=\"background-color:lightgray; margin: 5px; height:100%\">\r\n        <form\r\n            [formGroup]=\"newOccupationForm\"\r\n            class=\"needs-validation col-sm-8\"\r\n            (ngSubmit)=\"onSubmit(newOccupationForm.value)\"\r\n        >\r\n        <h1 class=\"display-4\" style=\"text-align: center;\">Set occupation</h1>\r\n        <div class=\"form-group col-sm-6 \">\r\n            <label for=\"mark\">Car </label>\r\n            <select\r\n                class=\"form-control\"\r\n                formControlName=\"carId\"\r\n                style=\"width: 310px;\"\r\n                id=\"car\">\r\n                <option\r\n                  *ngFor=\"let car of cars\"\r\n                  [value]=\"car.id\"\r\n                  >{{ car.mark.name }} {{car.model.name}}</option\r\n               >\r\n            </select>\r\n        </div>\r\n        <div class=\"form-group col-sm-6\">\r\n            <label for=\"toDate\">From date</label>\r\n            <input\r\n               type=\"date\"\r\n               formControlName=\"dateFrom\"\r\n               id=\"dateFrom\"\r\n               class=\"form-control\"\r\n               style=\"width: 310px;\"\r\n            />\r\n         </div> \r\n         <div class=\"form-group col-sm-6\" >\r\n            <label for=\"toDate\">To date</label>\r\n            <input\r\n               type=\"date\"\r\n               formControlName=\"dateTo\"\r\n               id=\"dateTo\"\r\n               class=\"form-control\"\r\n               style=\"width: 310px;\"\r\n            />\r\n         </div>\r\n         <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-bottom: 10px;\">\r\n            Submit\r\n         </button>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Model } from './model';\r\nimport { CarClass } from './carclass';\r\nimport { Fuel } from './fuel';\r\nimport { Gearbox } from './gearbox';\r\nimport { Mark } from './mark';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Ad } from './ad';\r\nimport { Car } from './car';\r\n\r\n\r\n@Injectable()\r\nexport class CarService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getModels() {\r\n    return this.http.get<Model[]>(environment.api + \"/model/all\");\r\n  }\r\n\r\n  getMarks() {\r\n    return this.http.get<Mark[]>(environment.api + \"/mark/all\");\r\n  }\r\n\r\n  getGearboxes() {\r\n    return this.http.get<Gearbox[]>(environment.api + \"/gearbox/all\");\r\n  }\r\n\r\n  getFuels() {\r\n    return this.http.get<Fuel[]>(environment.api + \"/fuel/all\");\r\n  }\r\n\r\n  getCarClasses() {\r\n    return this.http.get<CarClass[]>(environment.api + \"/carclass/all\");\r\n  }\r\n\r\n  getCarsByUser() {\r\n    //return this.http.get<any>(environment.api +\"/car/car/user\");\r\n    return this.http.get<any>(\"http://localhost:8080/car/user\");\r\n  }\r\n\r\n  getOneAd(id: number) {\r\n    return this.http.get<any>(environment.api + \"/car/ad/\" + id);\r\n    // return this.http.get<any>(\"http://localhost:8083/ad/\" + id);\r\n  }\r\n\r\n  postNewAd(userData) {\r\n    console.log(userData);\r\n    let car: Car = {\r\n      markId: userData.markId,\r\n      modelId: userData.modelId,\r\n      fuelId: userData.fuelId,\r\n      gearboxId: userData.gearboxId,\r\n      carClassId: userData.carClassId,\r\n      images: userData.images,\r\n      kilometrage: userData.kilometrage,\r\n      numberOfChildSeats: userData.numberOfChildSeats,\r\n      userId: -1\r\n    };\r\n    console.log(car);\r\n    let adDTO: Ad = {\r\n      carDTO: car,\r\n      cdwAvailable: userData.cdw,\r\n      allowedKilometrage: userData.allowedKilometrage,\r\n      fromDate: userData.fromDate,\r\n      toDate: userData.toDate,\r\n      pickUpPlace: userData.pickUpPlace,\r\n      priceListId: userData.priceListId\r\n    }\r\n    console.log(adDTO);\r\n    return this.http.post<Ad>(environment.api + \"/ad\", adDTO);\r\n  }\r\n\r\n  getStatistics() {\r\n    return this.http.get<any>(environment.api + \"/car/statistics/1\");\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OccupationService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  setOccupied(occupied: any) {\r\n    //return this.http.post<any>(environment.api + \"/car/occupied\", occupied);\r\n    return this.http.post<any>(\"http://localhost:8080/occupied\", occupied);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IStatistics } from '../shared/statistics';\r\nimport { CarService } from '../shared/car.service';\r\n\r\n@Component({\r\n  selector: 'app-statistics',\r\n  templateUrl: './statistics.component.html',\r\n  styleUrls: ['./statistics.component.css']\r\n})\r\nexport class StatisticsComponent implements OnInit {\r\n  statistics: IStatistics;\r\n\r\n  constructor(private carService: CarService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.carService.getStatistics().subscribe(\r\n      (data: IStatistics) => this.statistics = data,\r\n      err => console.error('Error in getting statistics')\r\n    );\r\n    alert(this.statistics.carWithHighestGrade.markName);\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n   <div class=\"d-flex flex-column col-sm-7\">\r\n      <div class=\"card-body\" *ngIf=\"statistics.carWithHighestGrade != null\">\r\n         <h5 class=\"card-title\">Najbolje ocenjeni automobil</h5>\r\n         <p>{{ statistics.carWithHighestGrade.markName }}</p>\r\n         <p>{{ statistics.carWithHighestGrade.modelName }}</p>\r\n         <p>\r\n            prosečna ocena: {{ statistics.carWithHighestGrade.averageGrade }}\r\n         </p>\r\n      </div>\r\n      <div class=\"card-body\" *ngIf=\"statistics.carWithMostComments != null\">\r\n         <h5 class=\"card-title\">Automobil sa najviše komentara</h5>\r\n         <p>{{ statistics.carWithMostComments.markName }}</p>\r\n         <p>{{ statistics.carWithMostComments.modelName }}</p>\r\n         <p>\r\n            Broj komentara:\r\n            {{ statistics.carWithMostComments.numberOfComments }}\r\n         </p>\r\n      </div>\r\n      <div class=\"card-body\" *ngIf=\"statistics.carWithMostKilometers != null\">\r\n         <h5 class=\"card-title\">Automobil sa najviše pređenih kilometara</h5>\r\n         <p>{{ statistics.carWithMostKilometers.markName }}</p>\r\n         <p>{{ statistics.carWithMostKilometers.modelName }}</p>\r\n         <p>\r\n            Pređeni kilometri:\r\n            {{ statistics.carWithMostKilometers.kilometrage }}\r\n         </p>\r\n      </div>\r\n   </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Chat } from './shared/chat';\r\nimport { Message } from './shared/message';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ChatService } from './shared/chat.service';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  messages: Message[];\r\n  chats: Chat[] = [];\r\n  messageForm;\r\n  newMessage: Message;\r\n  companionId: Number;\r\n\r\n  constructor(private chatService: ChatService, private formBuilder: FormBuilder) {\r\n    this.messageForm = this.formBuilder.group({ text: '' });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getMessages();\r\n  }\r\n\r\n  getMessages() {\r\n    this.chatService.getMessages(1)\r\n      .subscribe((data: Chat[]) => this.chats = data);\r\n  }\r\n\r\n  change_messages(chat: Chat) {\r\n    this.companionId = chat.companion.id;\r\n    this.messages = chat.messages;\r\n  }\r\n\r\n  onSubmit(mess: { text: String; }) {\r\n    this.newMessage = {\r\n      id: -1,\r\n      text: mess.text,\r\n      sent: new Date(),\r\n      user: 'sent',\r\n      companionId: this.companionId\r\n    };\r\n    this.chatService.sendMessage(this.newMessage)\r\n      .subscribe((data: Message) => this.messages.push(data));\r\n\r\n    this.messageForm.reset();\r\n  }\r\n}\r\n","<div>\r\n   <div class=\"messaging\">\r\n      <div class=\"inbox_msg row\">\r\n         <div class=\"inbox_people row\">\r\n            <div class=\"headind_srch col-sm-6\">\r\n               <div class=\"recent_heading col\">\r\n                  <h4>Recent</h4>\r\n               </div>\r\n               <div class=\"inbox_chat col\">\r\n                  <div\r\n                     class=\"chat_list active_chat\"\r\n                     *ngFor=\"let chat of chats\"\r\n                     (click)=\"change_messages(chat)\"\r\n                  >\r\n                     <div class=\"chat_people\">\r\n                        <div class=\"chat_img\">\r\n                           <img\r\n                              src=\"https://ptetutorials.com/images/user-profile.png\"\r\n                              alt=\"sunil\"\r\n                           />\r\n                        </div>\r\n                        <div class=\"chat_ib\">\r\n                           <h5 *ngIf=\"chat.companion.companyName != null\">\r\n                              {{ chat.companion.companyName }}\r\n                           </h5>\r\n                           <h5>\r\n                              {{\r\n                                 chat.companion.firstName +\r\n                                    \" \" +\r\n                                    chat.companion.lastName\r\n                              }}\r\n                              <!-- <span class=\"chat_date\">{{\r\n                                 chat.messages[0].sent\r\n                              }}</span> -->\r\n                           </h5>\r\n\r\n                           <p>\r\n                              {{ chat.messages[chat.messages.length - 1].text }}\r\n                           </p>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div class=\"mesgs col\" *ngIf=\"messages != undefined\">\r\n               <div class=\"msg_history\">\r\n                  <div\r\n                     [className]=\"\r\n                        msg.user == 'received' ? 'incoming_msg' : 'outgoing_msg'\r\n                     \"\r\n                     *ngFor=\"let msg of messages\"\r\n                  >\r\n                     <div\r\n                        [className]=\"\r\n                           msg.user == 'received'\r\n                              ? 'received_msg received_withd_msg'\r\n                              : 'sent_msg'\r\n                        \"\r\n                     >\r\n                        <p>{{ msg.text }}</p>\r\n                        <span class=\"time_date\"> 11:01 AM | June 9</span>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               <div class=\"type_msg\">\r\n                  <form\r\n                     [formGroup]=\"messageForm\"\r\n                     (ngSubmit)=\"onSubmit(messageForm.value)\"\r\n                  >\r\n                     <div class=\"input_msg_write\">\r\n                        <input\r\n                           type=\"text\"\r\n                           class=\"write_msg\"\r\n                           placeholder=\"Type a message\"\r\n                           formControlName=\"text\"\r\n                        />\r\n                        <button class=\"msg_send_btn\" type=\"submit\">\r\n                           Send\r\n                        </button>\r\n                     </div>\r\n                  </form>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Chat } from './chat';\r\nimport { Message } from './message';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  sendMessage(message: Message) {\r\n    return this.http.post<Message>(environment.api + \"/message\", message);\r\n  }\r\n\r\n\r\n  getMessages(userId: Number) {\r\n    return this.http.get<Chat[]>(environment.api + \"/message/\" + userId);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IComment } from './shared/comment';\r\nimport { CommentService } from './shared/comment.service';\r\n\r\n@Component({\r\n  selector: 'app-comment',\r\n  templateUrl: './comment.component.html',\r\n  styleUrls: ['./comment.component.css']\r\n})\r\nexport class CommentComponent implements OnInit {\r\n\r\n  comments: IComment[];\r\n\r\n  constructor(private commentService: CommentService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.commentService.getComments().subscribe(\r\n        (data: IComment[]) =>   this.comments = data,\r\n        err => console.error('Error in getting comments')\r\n        );\r\n  }\r\n  refresh(){\r\n    this.commentService.getComments().subscribe(\r\n       (data: IComment[]) => this.comments = data,\r\n       err => console.error('Error in getting comments')\r\n       );\r\n }\r\n\r\n  onClickRefuse(comment: any){\r\n    this.commentService.acceptOrRefuse(comment.id, false).subscribe(\r\n      data => {\r\n          console.log('Comment refused');\r\n          this.refresh();\r\n      },\r\n      err => {\r\n          console.error('Error accepting comment');\r\n      });\r\n  }\r\n\r\n  onClickAccepte(comment: any){\r\n    this.commentService.acceptOrRefuse(comment.id, true).subscribe(\r\n      data => {\r\n          console.log('Comment accepted');\r\n          this.refresh();\r\n      },\r\n      err => {\r\n          console.error('Error accepting comment');\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n    <div class=\"d-flex flex-column col-sm-7\">\r\n       <h1 class=\"display-4\" style=\"text-align: center;\">Comments</h1>\r\n       <div *ngFor = \"let comment of comments\" class=\"card\">\r\n          <div class=\"card-body\" >\r\n             <h5 class=\"card-title\">User: {{comment.userUsername}}</h5>\r\n             <p class=\"card-text\">{{comment.text}}</p>\r\n             <button class=\"btn btn-secondary\" style=\"float: right;\" (click) = \"onClickRefuse(comment)\">Refuse</button>\r\n             <button class=\"btn btn-primary\" style=\"margin-right: 10px; float: right;\" (click) = \"onClickAccepte(comment)\">Accept</button>\r\n          </div>\r\n       </div>\r\n       <br>\r\n </div>\r\n ","import { Injectable } from '@angular/core';\r\nimport { IComment } from './comment';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getComments() {\r\n    //return this.http.get<any>('http://localhost:8083/comment/all');\r\n    return this.http.get<any>(environment.api + '/car/comment/all');\r\n  }\r\n\r\n  getCommentsForCar(carId: number) {\r\n    //return this.http.get<any>('http://localhost:8083/comment/' + carId);\r\n    return this.http.get<any>(environment.api + '/car/comment/' + carId);\r\n  }\r\n\r\n  acceptOrRefuse(id: number, decision: boolean) {\r\n    return this.http.get<void>(environment.api + '/car/comment/accept/' + id + '/' + decision);\r\n    //return this.http.get<void>('http://localhost:8083/comment/accept/' + id + '/' + decision);\r\n  }\r\n\r\n  createComment(comment: IComment) {\r\n    //return this.http.post('http://localhost:8083/comment', comment);\r\n    return this.http.post(environment.api + '/car/comment', comment);\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GradeService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\ncreateGrade(grade: any){\r\n  return this.http.post('http://localhost:8083/grade', grade);\r\n   //return this.http.post(environment.api + '/car/grade', grade);\r\n}\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../auth/shared/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private auth: AuthService) {\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // Get the auth token from the service.\r\n        const authToken = this.auth.getToken();\r\n        if (authToken != '') {\r\n            alert(\"Why am i here\");\r\n            // Clone the request and replace the original headers with\r\n            // cloned headers, updated with the authorization.\r\n            const authReq = req.clone({\r\n                headers: req.headers.set('Authorization', authToken)\r\n            });\r\n\r\n            // send cloned request with header to the next handler.\r\n            return next.handle(authReq);\r\n        } else {\r\n            const request = req.clone({\r\n                headers: req.headers.set('Content-Type', 'application/json')\r\n            });\r\n            return next.handle(request);\r\n        }\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { IRequest } from '../shared/irequest.request';\r\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RequestService } from '../shared/request.service';\r\nimport { CommentService } from 'src/app/comment/shared/comment.service';\r\nimport { GradeService } from 'src/app/comment/shared/grade.service';\r\nimport { IComment } from 'src/app/comment/shared/comment';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Message } from 'src/app/chat/shared/message';\r\nimport { ChatService } from 'src/app/chat/shared/chat.service';\r\nimport { IReport } from '../shared/ireport.report';\r\n\r\n@Component({\r\n  selector: 'app-past-requests',\r\n  templateUrl: './past-requests.component.html',\r\n  styleUrls: ['./past-requests.component.css']\r\n})\r\nexport class PastRequestsComponent implements OnInit {\r\n  requests: IRequest[];\r\n  request: IRequest;\r\n  report: IReport;\r\n  textComment: string;\r\n  textCommentReport: string;\r\n  currentRate: number = 0;\r\n  myModal: NgbModalRef;\r\n  myModalReport: NgbModalRef;\r\n  user: string;\r\n  messageForm;\r\n  newMessage: Message;\r\n  companionId: number;\r\n  kilometrage: number;\r\n\r\n  constructor(private requestService: RequestService,\r\n    private modalService: NgbModal,\r\n    private commentService: CommentService,\r\n    private gradeService: GradeService,\r\n    private chatService: ChatService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router) { this.messageForm = this.formBuilder.group({ text: '' }); }\r\n\r\n  ngOnInit(): void {\r\n    this.getPast();\r\n    this.user = localStorage.getItem('User-role');\r\n  }\r\n\r\n  open(content, req) {\r\n    this.myModal = this.modalService.open(content);\r\n    this.request = req;\r\n  }\r\n\r\n  openReport(content, req) {\r\n    this.myModalReport = this.modalService.open(content);\r\n    this.request = req;\r\n  }\r\n\r\n  send() {\r\n    if (this.textComment == undefined || this.textComment == \"\") {\r\n      alert(\"Please, fill the comment\");\r\n      return;\r\n    }\r\n    let comment: IComment = {\r\n      id: null,\r\n      text: this.textComment,\r\n      approved: false,\r\n      adId: this.request.adId,\r\n      carId: null,\r\n      userUsername: 'bax'\r\n    };\r\n    this.commentService.createComment(comment).subscribe();\r\n\r\n    if (this.currentRate != 0) {\r\n      let grade: any = {\r\n        id: null,\r\n        grade: this.currentRate,\r\n        adId: 4,\r\n        carId: null,\r\n        userUsername: 'bax'\r\n      };\r\n      this.gradeService.createGrade(grade).subscribe();\r\n    }\r\n    this.myModal.close();\r\n  }\r\n\r\n  sendReport() {\r\n    if (this.textCommentReport == undefined || this.textCommentReport == \"\" ||\r\n      this.kilometrage == undefined || this.kilometrage == null || this.kilometrage == 0) {\r\n      alert(\"Enter info properly!\");\r\n      return;\r\n    }\r\n\r\n    let newReport: IReport = {\r\n      id: null,\r\n      kilometrage: this.kilometrage,\r\n      comment: this.textCommentReport,\r\n      ad_id: this.request.adId\r\n    };\r\n    this.requestService.createReport(newReport).subscribe(data => {\r\n      this.report = data;\r\n    }, err => {\r\n      alert(\"Error\");\r\n    });\r\n\r\n    this.myModalReport.close();\r\n  }\r\n\r\n  /*\r\n  report(req: IRequest) {\r\n    console.log(\"report\");\r\n  }\r\n  */\r\n\r\n  getPast() {\r\n    this.requestService.getPast()\r\n      .subscribe((data: IRequest[]) => this.requests = data);\r\n  }\r\n\r\n  openAd(req: IRequest) {\r\n    this.router.navigate(['/car', req.adId]);\r\n  }\r\n\r\n  onSubmit(mess: { text: String; }) {\r\n    this.newMessage = {\r\n      id: -1,\r\n      text: mess.text,\r\n      sent: new Date(),\r\n      user: 'sent',\r\n      companionId: this.companionId,\r\n    };\r\n    this.chatService.sendMessage(this.newMessage)\r\n      .subscribe(() => {\r\n        console.log(\"Message sent\");\r\n      }\r\n      );\r\n\r\n    this.messageForm.reset();\r\n  }\r\n\r\n  setCompanion(req: IRequest) {\r\n    this.companionId = req.userId;\r\n  }\r\n\r\n}","<div class=\"col-sm-6\">\r\n   <table class=\"table table-hover\">\r\n      <thead class=\"thead-dark\">\r\n         <tr>\r\n            <div>\r\n               <th scope=\"col\">Ad</th>\r\n               <th scope=\"col\">Pick up place</th>\r\n               <th scope=\"col\">Pick up date</th>\r\n               <th scope=\"col\">Return date</th>\r\n               <th scope=\"col\">Status</th>\r\n               <th scope=\"col\">Bundle id</th>\r\n            </div>\r\n\r\n            <th scope=\"col\">Report</th>\r\n            <th scope=\"col\">Comment & grade</th>\r\n            <th scope=\"col\">Chat</th>\r\n         </tr>\r\n      </thead>\r\n      <tbody>\r\n         <tr *ngFor=\"let req of requests\">\r\n            <div (click)=\"openAd(req)\">\r\n               <td>{{ req.adId }}</td>\r\n               <td>{{ req.pickUpPlace }}</td>\r\n               <td>{{ req.pickUpDate }}</td>\r\n               <td>{{ req.returnDate }}</td>\r\n               <td>{{ req.status }}</td>\r\n               <td>{{ req.bundleId == -1 ? \"\" : req.bundleId }}</td>\r\n            </div>\r\n\r\n            <td>\r\n               <button\r\n                  *ngIf=\"req.status == 'paid'\"\r\n                  class=\"btn btn-dark\"\r\n                  (click)=\"openReport(mymodal_report, req)\"\r\n               >\r\n                  Report\r\n               </button>\r\n            </td>\r\n            <td>\r\n               <button\r\n                  *ngIf=\"req.status == 'paid'\"\r\n                  (click)=\"open(mymodal, req)\"\r\n                  class=\"btn btn-dark\"\r\n               >\r\n                  Comment\r\n               </button>\r\n            </td>\r\n            <td>\r\n               <button\r\n                  type=\"button\"\r\n                  *ngIf=\"req.status == 'paid'\"\r\n                  class=\"btn btn-dark\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#exampleModal\"\r\n                  (click)=\"setCompanion(req)\"\r\n               >\r\n                  Chat\r\n               </button>\r\n            </td>\r\n         </tr>\r\n      </tbody>\r\n   </table>\r\n   <ng-template #mymodal let-modal>\r\n      <div class=\"modal-header\">\r\n         <h4 class=\"modal-title\" id=\"modal-basic-title\">Comment and grade</h4>\r\n         <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            aria-label=\"Close\"\r\n            (click)=\"modal.dismiss('Cross click')\"\r\n         >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n         </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n         <label> Comment </label><br />\r\n         <textarea\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"firstName\"\r\n            placeholder=\"Comment\"\r\n            value=\"\"\r\n            [(ngModel)]=\"textComment\"\r\n         ></textarea\r\n         ><br />\r\n         <label> Rating </label><br />\r\n         <ngb-rating [(rate)]=\"currentRate\" [max]=\"5\"></ngb-rating>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n         <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"send()\">\r\n            Send\r\n         </button>\r\n      </div>\r\n   </ng-template>\r\n   <!-- Modal -->\r\n   <div\r\n      class=\"modal fade\"\r\n      id=\"exampleModal\"\r\n      tabindex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n   >\r\n      <div class=\"modal-dialog\">\r\n         <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n               <h5 class=\"modal-title\" id=\"exampleModalLabel\">New message</h5>\r\n               <button\r\n                  type=\"button\"\r\n                  class=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n               >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n               </button>\r\n            </div>\r\n            <form\r\n               [formGroup]=\"messageForm\"\r\n               (ngSubmit)=\"onSubmit(messageForm.value)\"\r\n            >\r\n               <div class=\"modal-body\">\r\n                  <div class=\"form-group\">\r\n                     <label for=\"message-text\" class=\"col-form-label\"\r\n                        >Message:</label\r\n                     >\r\n                     <textarea\r\n                        class=\"form-control\"\r\n                        id=\"message-text\"\r\n                        formControlName=\"text\"\r\n                     ></textarea>\r\n                  </div>\r\n               </div>\r\n               <div class=\"modal-footer\">\r\n                  <button\r\n                     type=\"button\"\r\n                     class=\"btn btn-secondary\"\r\n                     data-dismiss=\"modal\"\r\n                  >\r\n                     Close\r\n                  </button>\r\n                  <button type=\"submit\" class=\"btn btn-primary\">\r\n                     Send message\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      </div>\r\n   </div>\r\n   <ng-template #mymodal_report let-modal>\r\n      <div class=\"modal-header\">\r\n         <h4 class=\"modal-title\" id=\"modal-basic-title\">Report</h4>\r\n         <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            aria-label=\"Close\"\r\n            (click)=\"modal.dismiss('Cross click')\"\r\n         >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n         </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n         <label> Comment </label><br />\r\n         <textarea\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"firstName\"\r\n            placeholder=\"Comment\"\r\n            value=\"\"\r\n            [(ngModel)]=\"textCommentReport\"\r\n         ></textarea\r\n         ><br />\r\n         <label> Enter new kilometers </label><br />\r\n         <input type=\"number\" [(ngModel)]=\"kilometrage\" />\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n         <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-dark\"\r\n            (click)=\"sendReport()\"\r\n         >\r\n            Send\r\n         </button>\r\n      </div>\r\n   </ng-template>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IRequest } from './shared/irequest.request';\r\nimport { RequestService } from './shared/request.service';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-requests',\r\n  templateUrl: './requests.component.html',\r\n  styleUrls: ['./requests.component.css']\r\n})\r\nexport class RequestsComponent implements OnInit {\r\n  requests: IRequest[];\r\n  request: IRequest;\r\n  textComment: string;\r\n  currentRate: number = 0;\r\n  myModal: NgbModalRef;\r\n\r\n  constructor(private requestService: RequestService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getRequests();\r\n  }\r\n\r\n  getRequests() {\r\n    this.requestService.getActive()\r\n      .subscribe((data: IRequest[]) => this.requests = data);\r\n  }\r\n\r\n  accept(req: IRequest) {\r\n    if (req.bundleId == -1)\r\n      this.requestService.acceptRequest(req.id)\r\n        .subscribe();\r\n    else\r\n      this.requestService.acceptBundle(req.bundleId)\r\n        .subscribe();\r\n  }\r\n\r\n  refuse(req: IRequest) {\r\n    if (req.bundleId == -1)\r\n      this.requestService.refuseRequest(req.id)\r\n        .subscribe();\r\n    else\r\n      this.requestService.refuseBundle(req.bundleId)\r\n        .subscribe();\r\n  }\r\n\r\n  cancel(req: IRequest) {\r\n    if (req.bundleId == -1)\r\n      this.requestService.cancelRequest(req.id).subscribe();\r\n    else\r\n      this.requestService.cancelBundle(req.bundleId).subscribe();\r\n  }\r\n\r\n  openAd(req: IRequest) {\r\n    this.router.navigate(['/car', req.adId]);\r\n  }\r\n}\r\n","<div class=\"col-sm-6\">\r\n   <table class=\"table table-hover\">\r\n      <thead class=\"thead-dark\">\r\n         <tr>\r\n            <div>\r\n               <th scope=\"col\">Ad</th>\r\n               <th scope=\"col\">Pick up place</th>\r\n               <th scope=\"col\">Pick up date</th>\r\n               <th scope=\"col\">Return date</th>\r\n               <th scope=\"col\">Status</th>\r\n               <th scope=\"col\">Bundle id</th>\r\n            </div>\r\n\r\n            <th scope=\"col\">Accept</th>\r\n            <th scope=\"col\">Refuse</th>\r\n            <th scope=\"col\">Cancel</th>\r\n         </tr>\r\n      </thead>\r\n      <tbody>\r\n         <tr *ngFor=\"let req of requests\">\r\n            <div (click)=\"openAd(req)\">\r\n               <td>{{ req.adId }}</td>\r\n               <td>{{ req.pickUpPlace }}</td>\r\n               <td>{{ req.pickUpDate }}</td>\r\n               <td>{{ req.returnDate }}</td>\r\n               <td>{{ req.status }}</td>\r\n               <td>{{ req.bundleId == -1 ? \"\" : req.bundleId }}</td>\r\n            </div>\r\n\r\n            <td>\r\n               <button\r\n                  *ngIf=\"req.status == 'pending'\"\r\n                  class=\"btn btn-dark\"\r\n                  (click)=\"accept(req)\"\r\n               >\r\n                  Accept\r\n               </button>\r\n            </td>\r\n            <td>\r\n               <button\r\n                  *ngIf=\"req.status == 'pending'\"\r\n                  class=\"btn btn-dark\"\r\n                  (click)=\"refuse(req)\"\r\n               >\r\n                  Refuse\r\n               </button>\r\n            </td>\r\n            <td>\r\n               <button\r\n                  *ngIf=\"req.status == 'pending'\"\r\n                  class=\"btn btn-dark\"\r\n                  (click)=\"cancel(req)\"\r\n               >\r\n                  Cancel\r\n               </button>\r\n            </td>\r\n         </tr>\r\n      </tbody>\r\n   </table>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IRequest } from './irequest.request';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IReport } from './ireport.report';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RequestService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRequests() {\r\n    //return this.http.get<IRequest[]>(\"http://localhost:8084/1\");\r\n    return this.http.get<IRequest[]>(environment.api + \"/request/1\");\r\n  }\r\n\r\n  getActive() {\r\n    return this.http.get<IRequest[]>(environment.api + \"/request/active/1\")\r\n  }\r\n\r\n  getPast() {\r\n    return this.http.get<IRequest[]>(environment.api + \"/request/past/1\")\r\n  }\r\n\r\n  acceptRequest(reqId) {\r\n    return this.http.patch(environment.api + \"/request/accept\", { id: reqId });\r\n  }\r\n\r\n  acceptBundle(bundleId) {\r\n    return this.http.patch(environment.api + \"/bundle/accept\", { id: bundleId });\r\n  }\r\n\r\n  refuseRequest(reqId) {\r\n    return this.http.patch(environment.api + \"/request/refuse\", { id: reqId });\r\n  }\r\n\r\n  refuseBundle(bundleId) {\r\n    return this.http.patch(environment.api + \"/bundle/refuse\", { id: bundleId });\r\n  }\r\n\r\n  cancelRequest(reqId) {\r\n    return this.http.patch(environment.api + \"/request/cancel\", { id: reqId });\r\n  }\r\n\r\n  cancelBundle(bundleId) {\r\n    return this.http.patch(environment.api + \"/bundle/cancel\", { id: bundleId });\r\n  }\r\n\r\n  createReport(report: IReport) {\r\n    return this.http.post<any>(environment.api + \"/report\", report);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}